.TH GOO 1 "2005-08-04"
.SH NAME
goo, g2c \- generic object-orientator (programming language)
.SH SYNOPSIS
.B goo
.br
.B g2c
.SH DESCRIPTION
This manual page documents briefly the \fBgoo\fP and \fBg2c\fP commands.
.PP
\fBgoo\fP and \fBg2c\fP interactively evaluate statements in GOO, a
dynamic, type-based, object-oriented language in the same family as
Dylan and Scheme.
The language is designed to be simple, productive, powerful,
extensible, dynamic, efficient, and real-time.
.PP
\fBgoo\fP and \fBg2c\fP support two evaluation modes, controlled by
the environment variable \fBGOO_EVAL_MODE\fP; the two commands differ
only in which mode is the default.
In \fBast\fP mode (short for "abstract syntax tree", and the default
for \fBgoo\fP), they directly interpret parsed goo expressions.
In \fBg2c\fP mode (the default for \fBg2c\fP), they instead translate
expressions into dynamically compiled C code.
.SH OPTIONS
None.
.SH USAGE
Typing \fBgoo\fP or \fBg2c\fP at your shell will start up a \fBgoo\fP
read-eval-print loop, which accepts s-expressions and top-level
commands commencing with a comma.
The following is a list of available commands:
.TP
\fB,quit\fP
Exit the program.
.TP
\fB^C\fP\ (control-C)
Invoke a recursive read-eval-print loop.
.TP
\fB,g2c-eval\fP
Change to dynamic compilation evaluation.
.TP
\fB,ast-eval\fP
Change to ast evaluation.
.TP
\fB,in\ ,\fP\fIname\fP
Change to module \fIname\fP.
.SH ENVIRONMENT
.TP
GOO_EVAL_MODE
Determines evaluation mode, as documented in DESCRIPTION above.
.TP
GOO_ROOT
Installation root (\fB/usr\fP on Debian systems); files needed at
runtime can be found under \fB${GOO_ROOT}/lib/goo\fP.
.SH SEE ALSO
The full GOO reference manual: /usr/share/doc/goo/goo.pdf.gz or
/usr/share/doc/goo/manual/goomanual.html .
.SH AUTHOR
goo was written by Jonathan Bachrach.
.PP
This manual page was written by Aaron M. Ucko <ucko@debian.org>, for
the Debian project based on Jonathan's documentation (but may be used
by others).
