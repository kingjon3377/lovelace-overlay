--- megahal-9.1.1a.orig/Makefile
+++ megahal-9.1.1a/Makefile
@@ -18,7 +18,9 @@
 
 # DEBUG=-DDEBUG
 TCLVERSION=8.3
-TCLINCLUDE=-I/usr/include/tcl$(TCLVERSION)
+# /usr/include/tcl is provided by tcl-dev on Debian
+#TCLINCLUDE=-I/usr/include/tcl$(TCLVERSION)
+TCLINCLUDE=-I/usr/include/tcl
 CFLAGS=-g -Wall
 
 
--- megahal-9.1.1a.orig/python-interface.c
+++ megahal-9.1.1a/python-interface.c
@@ -7,7 +7,7 @@
 static PyObject *mhinitbrain(PyObject *self, PyObject *args)
 {
     megahal_initialize();
-    return Py_None;
+	return Py_BuildValue("");
 }
 
 static PyObject *mhdoreply(PyObject *self, PyObject *args)
@@ -32,13 +32,13 @@
 
     megahal_learn_no_reply(input, 1);
 
-    return Py_None;
+	return Py_BuildValue("");
 }
 
 static PyObject *mhcleanup(PyObject *self, PyObject *args)
 {
     megahal_cleanup();
-    return Py_None;
+	return Py_BuildValue("");
 }
 
 static struct PyMethodDef mh_methods[] = {
--- megahal-9.1.1a.orig/megahal.c
+++ megahal-9.1.1a/megahal.c
@@ -225,8 +225,13 @@
 static bool nowrap=FALSE;
 static bool nobanner=FALSE;
 
+/* WARNING : if you ever change the following name,
+ * please change the malloc below as well.
+ */
+
 static char *errorfilename = "megahal.log";
 static char *statusfilename = "megahal.txt";
+static char *dictionaryfilename = "megahal.dic";
 static DICTIONARY *words=NULL;
 static DICTIONARY *greets=NULL;
 static MODEL *model=NULL;
@@ -240,7 +245,7 @@
 static DICTIONARY *grt=NULL;
 static SWAP *swp=NULL;
 static bool used_key;
-static char *directory=NULL;
+static char *directory=".";
 static char *last=NULL;
 
 static COMMAND command[] = {
@@ -408,11 +413,19 @@
 
 void megahal_initialize(void)
 {
+    char *filenamebuff;
     errorfp = stderr;
     statusfp = stdout;
+    
+    filenamebuff = (char *) malloc (strlen (directory) + strlen(SEP) + 12);
+
+    sprintf(filenamebuff, "%s%s%s", directory, SEP, errorfilename);
+    initialize_error(filenamebuff);
+
+    sprintf(filenamebuff, "%s%s%s", directory, SEP, statusfilename);
+    initialize_status(filenamebuff);
+    free (filenamebuff);
 
-    initialize_error(errorfilename);
-    initialize_status(statusfilename);
     ignore(0);
 
 #ifdef AMIGA
@@ -1371,7 +1384,7 @@
 void load_dictionary(FILE *file, DICTIONARY *dictionary)
 {
     register int i;
-    int size;
+    BYTE4 size;
 
     fread(&size, sizeof(BYTE4), 1, file);
     progress("Loading dictionary", 0, 1);
@@ -1853,9 +1866,14 @@
     register unsigned int i;
     register unsigned int j;
     FILE *file;
+    char *filename;
 
-    file=fopen("megahal.dic", "w");
-    if(file==NULL) {
+    filename = (char *) malloc (sizeof(char)*(strlen(directory)+strlen(SEP)+12));
+
+    sprintf (filename, "%s%s%s", directory, SEP, dictionaryfilename);
+    file = fopen(filename, "w");
+    free (filename);
+    if(file == NULL) {
 	warn("show_dictionary", "Unable to open file");
 	return;
     }
--- megahal-9.1.1a.orig/docs/megahal.1
+++ megahal-9.1.1a/docs/megahal.1
@@ -12,8 +12,8 @@
 conversation. It is possible to teach MegaHAL to talk about new topics,
 and in different languages.
 .BR megahal-personal
-is a varient of megahal that saves its state files in ~/.megahal/ when it
-exits. This lets each user have thier own personal megahal.
+is a variant of megahal that saves its state files in ~/.megahal/ when it
+exits. This lets each user have their own personal megahal.
 .SH OPTIONS
 .IP "--no-prompt, -p"
 Do not display prompt when asking user for input. This is a debian-specific
@@ -24,9 +24,14 @@
 modification, and is useful mainly if you want to interface megahal to
 another program.
 .IP "--no-banner, -b"
-Supress the startup banner. This is a debian-specific
+Suppress the startup banner. This is a debian-specific
 modification, and is useful mainly if you want to interface megahal to
 another program.
+.SH WARNING
+MegaHAL allows multiple lines to form a single input. Thus a single
+newline character is parsed as any other token and MegaHAL can output
+replies consisting of multiple lines. To end an input, you need to
+type enter twice.
 .SH "SEE ALSO"
 /usr/share/doc/megahal/README.TXT.gz
 .SH AUTHOR
--- megahal-9.1.1a.orig/Megahal/const-c.inc
+++ megahal-9.1.1a/Megahal/const-c.inc
@@ -39,11 +39,11 @@
 my $types = {map {($_, 1)} qw(IV)};
 my @names = (qw(MEGAHAL_H));
 
-print constant_types(); # macro defs
+print constant_types(), "\n"; # macro defs
 foreach (C_constant ("Megahal", 'constant', 'IV', $types, undef, 3, @names) ) {
     print $_, "\n"; # C constant subs
 }
-print "#### XS Section:\n";
+print "\n#### XS Section:\n";
 print XS_constant ("Megahal", $types);
 __END__
    */
--- megahal-9.1.1a.orig/Megahal/const-xs.inc
+++ megahal-9.1.1a/Megahal/const-xs.inc
@@ -22,12 +22,14 @@
            Second, if present, is found value */
         switch (type) {
         case PERL_constant_NOTFOUND:
-          sv = sv_2mortal(newSVpvf("%s is not a valid Megahal macro", s));
+          sv =
+	    sv_2mortal(newSVpvf("%s is not a valid Megahal macro", s));
           PUSHs(sv);
           break;
         case PERL_constant_NOTDEF:
           sv = sv_2mortal(newSVpvf(
-	    "Your vendor has not defined Megahal macro %s, used", s));
+	    "Your vendor has not defined Megahal macro %s, used",
+				   s));
           PUSHs(sv);
           break;
         case PERL_constant_ISIV:
