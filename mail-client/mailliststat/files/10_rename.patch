diff -Nur mailliststat-1.3/examples/example.php mailliststat-1.3.new/examples/example.php
--- mailliststat-1.3/examples/example.php	2005-12-01 21:19:04.000000000 +0100
+++ mailliststat-1.3.new/examples/example.php	2005-12-01 21:40:37.000000000 +0100
@@ -8,7 +8,7 @@
 $mls->title="Statistics for MOBiL (year 2002)";
 $mls->default_lang="sk";
 $mls->default_topX="25";
-$mls->path="/usr/local/bin/mls"; // mls executable
+$mls->path="/usr/local/bin/mailliststat"; // mailliststat executable
 $mls->input="/home/marki/2002.cache"; // input file
 $mls->graph="dwmy"; // show graphs for Day, Week, Month and Year
 $mls->is_cache=true; // input file is cache (and not MBOX)
diff -Nur mailliststat-1.3/examples/forward mailliststat-1.3.new/examples/forward
--- mailliststat-1.3/examples/forward	2005-12-01 21:19:04.000000000 +0100
+++ mailliststat-1.3.new/examples/forward	2005-12-01 21:41:47.000000000 +0100
@@ -9,8 +9,8 @@
 # now run MLS
 # we can update several cache files here...
 # first, aggregate stats
-"|/usr/local/bin/mls -q -u /home/marki/list-whole.cache"
+"|/usr/local/bin/mailliststat -q -u /home/marki/list-whole.cache"
 # stats for actual month (to file list-year-month.cache)
-"|/usr/local/bin/mls -q -u /home/marki/list-`/bin/date +'%Y-%m'`.cache"
+"|/usr/local/bin/mailliststat -q -u /home/marki/list-`/bin/date +'%Y-%m'`.cache"
 # stats for actual month (to file list-year.cache)
-"|/usr/local/bin/mls -q -u /home/marki/list-`/bin/date +'%Y'`.cache"
+"|/usr/local/bin/mailliststat -q -u /home/marki/list-`/bin/date +'%Y'`.cache"
diff -Nur mailliststat-1.3/examples/procmailrc mailliststat-1.3.new/examples/procmailrc
--- mailliststat-1.3/examples/procmailrc	2005-12-01 21:19:04.000000000 +0100
+++ mailliststat-1.3.new/examples/procmailrc	2005-12-01 21:41:34.000000000 +0100
@@ -1,13 +1,13 @@
 # example of running MLS from .procmailrc (or side-wide procmailrc)
 
-# run mls for mailing list named MOBiL
+# run mailliststat for mailing list named MOBiL
 # (search in headers, carbon copy, use "mls_lock".$LOCKEXT as local lock-file)
 # update cache file for actual month, actual year and aggregate...
 :0 Hc:mls_lock
 * ^Sender: mobil-admin@mobil.sk
-|~/usr/local/bin/mls -q -u /home/marki/mobil-whole.cache
-|~/usr/local/bin/mls -q -u /home/marki/mobil-`date +'%Y'`.cache
-|~/usr/local/bin/mls -q -u /home/marki/mobil-`date +'%Y-%m'`.cache
+|~/usr/local/bin/mailliststat -q -u /home/marki/mobil-whole.cache
+|~/usr/local/bin/mailliststat -q -u /home/marki/mobil-`date +'%Y'`.cache
+|~/usr/local/bin/mailliststat -q -u /home/marki/mobil-`date +'%Y-%m'`.cache
 
 # ...
 # your usual recipes
diff -Nur mailliststat-1.3/HISTORY.mls.txt mailliststat-1.3.new/HISTORY.mls.txt
--- mailliststat-1.3/HISTORY.mls.txt	2005-12-01 21:19:04.000000000 +0100
+++ mailliststat-1.3.new/HISTORY.mls.txt	2005-12-01 21:37:01.000000000 +0100
@@ -19,7 +19,8 @@
 
 1.3   + Portugues Brasil translation
       + added detection of some more email and news clients
-      + updating cache file now possible (to run mls from .forward for example)
+      + updating cache file now possible (to run maillliststat from .forward
+        for example)
       + quiet mode (-q) - will print only errors (to stderr)
       + new graph - msgs written during months of year
       + new command-line option (-g) to specify which graphs to show
@@ -37,7 +38,7 @@
       * added workaround to detect Pine mailer (search in Message-ID header)
       * some changes in regex's - better detection of "Re:"s in subject and
         mailer identification; changes won't show up in old cache files, you
-	should re-generate them using this version of mls
+	should re-generate them using this version of mailliststat
 
 1.2.1 * fixed bug in PHP wrapper causing incomplete output
 
diff -Nur mailliststat-1.3/html/mls_class.php mailliststat-1.3.new/html/mls_class.php
--- mailliststat-1.3/html/mls_class.php	2005-12-01 21:19:04.000000000 +0100
+++ mailliststat-1.3.new/html/mls_class.php	2005-12-01 21:39:58.000000000 +0100
@@ -44,9 +44,10 @@
  var $input="/home/marki/mobil.cache";
  // is input file Cache or MBOX? (using cache file is recommended)
  var $is_cache=true;
- // path to mls executable
- var $path="/usr/local/bin/mls";
- // graphs to show (-g in mls; don't specify to use default in mls)
+ // path to mailliststat executable
+ var $path="/usr/local/bin/mailliststat";
+ // graphs to show (-g in mailliststat; don't specify to use default in
+ // mailliststat)
  var $graph="";
  // default values for LANG & topXX
  var $default_lang="EN";
@@ -69,14 +70,14 @@
  function Run() { // main function called by user
    global $HTTP_GET_VARS;
    // get user submitted values (or use default)
-   $this->lang=$HTTP_GET_VARS['lang']; // language (-l option in mls)
+   $this->lang=$HTTP_GET_VARS['lang']; // language (-l option in mailliststat)
    $this->topX=$HTTP_GET_VARS['topX']; // print topXX (-n)
    if (!$this->lang) $this->lang=$this->default_lang;
    if (!$this->topX) $this->topX=$this->default_topX;
    // check user (web) submitted data for validity
    if (!eregi("^[a-z]{2}$",$this->lang) || !eregi("^[0-9]{1,3}$",$this->topX))
       $this->error("You have specified invalid parameters!");
-   echo $this->RunMLS(); // run mls & print output
+   echo $this->RunMLS(); // run mailliststat & print output
    $this->timeEnd();
  }// Run()
 
@@ -87,7 +88,7 @@
    die("</BODY></HTML>");
  }// error()
 
- function RunMLS() { // run mls & return modified output
+ function RunMLS() { // run mailliststat & return modified output
    if ($this->is_cache) $inp="-r";
                    else $inp="-i";
    $exec=escapeShellCmd($this->path);
@@ -101,7 +102,7 @@
    // check return value
    switch($ret) {
     case   1: $this->error("Cache file has wrong format!");
-    case   2: $this->error("Invalid parameters while executing mls!");
+    case   2: $this->error("Invalid parameters while executing mailliststat!");
     case   3: $this->error("Cannot open input file!");
     case   4: $this->error("Not enough memory!");
     case 127: $this->error("Cannot run MLS!");
diff -Nur mailliststat-1.3/mailliststat.1 mailliststat-1.3.new/mailliststat.1
--- mailliststat-1.3/mailliststat.1	1970-01-01 01:00:00.000000000 +0100
+++ mailliststat-1.3.new/mailliststat.1	2005-12-01 21:33:43.000000000 +0100
@@ -0,0 +1,402 @@
+.\" Copyright (c) 2001-2003, Marek -Marki- Podmaka <marki@nexin.sk>
+.TH mailliststat 1 "June 2003" Utils "User Manuals"
+.SH NAME
+mailliststat \- Display useful statistics on email messages
+.SH SYNOPSIS
+.B mailliststat [-hvq] [-l
+.IB lang "] [-i"
+.IB file "] [-o"
+.IB file "] [-r|w|u"
+.IB file "] [-t|T"
+.IB text "] [-m"
+.IB mode "] [-n"
+.IB XX "] [-g"
+.IB xxxx "]
+.SH DESCRIPTION
+.B MailListStat
+is program that prints some "useful" statistical info on email messages. 
+It's main usage is in email conferences - mailing lists. Currently it 
+displays both
+.I tables
+and
+.IR graphs .
+You can select either TEXT or HTML output.
+.SH OPTIONS
+.TP
+.B \-h
+print help text and exit
+.TP
+.B \-q
+be quiet (print only errors to stderr)
+.TP
+.B \-v
+turn on verbose mode - in this mode it will print more info to
+.IR stderr
+- indication of progress (will print every 10th, 20th, ..., 90th, 100th, 
+200th, ..., 900th, 1000th, 2000th ... message being processed) and warnings 
+about malformed headers found
+.TP
+.BI \-l " lang"
+select output language; please note that this applies only to generated 
+statistics - program messages printed to
+.I stderr
+ale always in English. These languages are currently supported:
+.IR EN " (English),"
+.IR SK " (Slovak),"
+.IR IT " (Italian),"
+.IR FR " (Francais),"
+.IR DE " (Deutsch),"
+.IR ES " (Spanish),"
+.IR SR " (Serbian),"
+.IR BR " (Portugues Brasil)."
+.TP
+.BI \-i " file"
+name of input file (if not specified, use
+.IR stdin ")."
+This file should be in MBOX format. It should exist and be readable.
+.TP
+.BI \-o " file"
+name of output file (if not specified, use
+.IR stdout ")."
+If exists, it will be overwritten.
+.TP
+.BI \-r " file"
+read input from cache file instead of mailbox. You can read input either
+from mailbox or cache file, not both!
+.TP
+.BI \-w " file"
+write cache file (no stats produced). You can either produce text output
+or write cache file, not both! When writing cache file, output-related
+options are ignored.
+.TP
+.BI \-u " file"
+update cache file = read cache, read input, write cache. For use with .procmailrc/.forward
+.TP
+.BI \-t " text"
+name of mailing list this statistics is computed for. If specified, it is 
+just appended to the title of statistics, so it will be like "Statistics 
+from 16.8.2001 to 7.9.2001 for text", where
+.I text
+is whatever you put as this parameter (it could be name of the mailing list 
+or just its email, e.g.
+.IR "mobil@mobil.sk" ")."
+.TP
+.BI \-T " text"
+title text (only this will be printed as title); this can be used to supress
+normal title text (date of oldest/newest msg) and completely replace it with
+your text.
+.TP
+.BI \-m " mode"
+select mode of output (text, html, html2).
+.TP
+.BI \-n " XX"
+show TOP XX tables (default TOP 10). By default,
+.B mailliststat
+displays tables of TOP 10 people, subjects, quoting or whatever. Using this 
+parameter, you can define how many lines shall these tables have.
+.TP
+.BI \-g " xxxx"
+graphs to show (Day, Week, Month, Year, Xnone) - specify first letter
+(e.g. -g dmy).
+.SH EXIT STATUS
+.TP
+.B 0
+Everything went OK and no error occurred.
+.TP
+.B 1
+Error in sscanf() while reading & parsing cache file. It means that the format
+of cache file is invalid. Try to create the cache file again.
+.TP
+.B 2
+Invalid command-line option/language. You have specified an invalid
+command-line parameter.
+.TP
+.B 3
+Cannot open input/output file. Please check that you have typed correct 
+filename and that you have read permissions for input file and write 
+permissions to destination directory (because output file must be created). 
+If output file exists, it's overwritten.
+.TP
+.B 4
+Not enough memory is available for dynamically allocated variables. This 
+could be caused by user-limits, because
+.B mailliststat
+requires only few MBs of memory (it depends on number of messages processed 
+and number of different subjects and authors).
+.TP
+.B 5
+Error compiling regex. This error should not occur in world-available 
+versions.
+.SH USAGE
+.SS Input
+On input, there should be mailbox file in standard MBOX format. If the file
+is in different format, the results are unpredictable. There should be at
+least one email message, otherwise no stats can be computed.
+
+.B Warning:
+Be sure that no special messages are in input files (such as that
+with "DON'T DELETE THIS MESSAGE -- FOLDER INTERNAL DATA" subject), because
+they will be also analysed. Many programs (POP3/IMAP daemons, email readers)
+put their special messages to the mailbox. This message is only ignored when
+reporting oldest message found.
+.SS Output
+Statistics is put into output file (or stdout if unspecified) in specified
+language. All diagnostic messages are written to stderr and are in English.
+Output consists of several statistical data - tables, graphs and summaries.
+The title has two formats depending on
+.I "-t"
+parameter. If it's not specified, it looks like "Statistics from 16.8.2001 to
+7.9.2001", where first date is date of the oldest message found in input and
+second is date of the newest one. If there is for example
+.I "-t mobil@mobil.sk"
+parameter, it will look like "Statistics from 16.8.2001 to 7.9.2001 for
+mobil@mobil.sk". The problem is that date of oldest & newest msg is often wrong
+(thanks to bad date/time settings on PC of msg author), so you can specify
+entire title using command-line option
+.IR "-T" .
+When used, only your text will be printed as title, nothing more. There you can
+put for example something like "Statistics for mobil@mobil.sk".
+
+Now you have option (
+.IR -g ")"
+to specify which graphs you want to show - hours of Day, days of Week, days of Month,
+months of Year. Use 1st letters as argument to -g option (so
+.I -g dw
+will print just hours of Day and days of Week). Use
+.I -g x
+to disable printing of any graph. For example you don't want to show graph for months
+of Year if you are presenting stats for one month, but for full-year stats you
+probably want it.
+.SS HTML output
+You can choose between 2 modes of output - TEXT and HTML. When in HTML mode,
+.B mailliststat
+will produce the output as HTML page. When you specify HTML2 mode, only
+the body of HTML document is produced (no header/footer) - it can be used
+to have different HTML header/footer when calling
+.B mailliststat
+as CGI or when using
+PHP wrapper. The output consists of HTML tables and bar graphs. Almost every
+aspect of how it looks can be configured by modifying CSS style-sheet. Please
+note that files
+.I "style_mls.css"
+and
+.I "bar.gif"
+must be present in the same
+directory as produced HTML file. You can, however, modify both to best suit
+your needs. Everything should be clear after reading comments in CSS file and
+looking at the produced HTML source.
+
+I was unsure what type of graphs to produce. I have tried also horizontal
+bar graphs and if you want to try them, just uncomment part of code in
+PrintGraphHtml() in mls_text.c.
+.SS Cache file support
+Instead of producing statistics in text format, you can save all the
+generated values/results into "cache" file. Retrieving information from this
+file is very fast, so it is useful for integration with web pages. Now you
+can update the cache file just after new mail was received. Users can view
+actual stats using
+.B mailliststat
+ as CGI script. It has an advantage over static stats
+that user can choose language and others options and it will be generated
+in a moment!
+
+To update cache file, use the
+.I -u
+option. It works like this: first, the stats
+are loaded from cache file (doesn't have to exist) and then new message(s)
+to be added are read from stdin (or from -i file) and added to the stats.
+Finally the updated stats are written back to the cache file. The process
+is really quick, because usually only one message is added at a time. This is
+useful mainly for updating cache files upon receiving new message. In the
+"examples/" subdir, you can find examples of integration with your .forward
+and .procmailrc files. By running MLS more than once, you can generate cache
+files for individual months and also for whole years (see examples). Then use
+some PHP script to present list of these cache files to user.
+
+Format of cache files was changed in version 1.3, because of new stats added.
+Now it contains version info, so mailliststat can inform you that you have to
+re-create that cache file with new version. Unfortunately, you have to
+re-create them also when you want new email clients to be recognized also in
+old (already processed) messages. Note that email clients detection was buggy
+in 1.2.2 (a lot of clients not recognized).
+.SS PHP wrapper
+I have written also PHP wrapper for
+.B mailliststat
+to make it more "interactive". It has
+two major advantages over plain HTML output from
+.BR mailliststat :
+User can choose output
+language and number of TOP items to show. It works by running
+.B mailliststat
+with appopriate command-line options. It's safe, because only two items from user
+are language and topXX which are checked using regexp, so running arbitrary
+code is not possible. You can also alter
+.B mailliststat
+output - for example change @ in email addresses to (at) to prevent spamming.
+  
+You can have normal MBOX file as input, but I recommend using cache file.
+When using cache file, the stats are produced in a moment. You can see how
+long it took to generate the page, see the last line of HTML source. However,
+there is minor speed problem. It takes longer when you specify to show many
+topXX (like 999). The problem is regexp that searches for @. It has to search
+for it in whole
+.B mailliststat
+output together and when it is large, it takes a while
+(1.1 seconds on my 2.1GHz pentium4). I have added an option which should use
+Perl-compatible regex function (preg_replace) instead of POSIX (ereg_replace),
+if available. This will result in MUCH faster execution (50ms instead of 1.1sec).
+.SH NOTES
+.SS How it is all computed?
+OK, so let's start from beginning - the format of MBOX file. It's plain text
+file containing some email messages delimited with one empty line. Each
+message starts with line like this
+.IR "From abc@a.sk  Thu Aug 16 15:48:58 2001" .
+After this line, there are few headers, one empty line and message text.
+Storing emails in this format is quite common - your incoming mail is usually
+saved in MBOX format and also your folders in mail-readers like
+.BR elm (1),
+.BR pine (1),
+.BR mutt (1)...
+
+Who is author of an email message? It's taken from
+.I From:
+header field and everything except the actual email address (like your full
+name) is stripped off using quite simple regular expression (regexp).
+
+Subject is taken from
+.I Subject:
+header field. If it contains some
+.IR "Re:" ","
+those will be stripped off. There can be up to 5 of them. Also counted format
+(
+.IR "Re[3]:" ")"
+is supported. For example The Bat! email client uses it. MIME-decoding is
+applied to subject lines (see below).
+  
+Date is just everything in the
+.I Date:
+header. This header is generated by
+the email client, so it's date of message creation and it doesn't have to
+be present in each message. If it isn't, you are warned by message like
+"Warning: 1 message(s) not counted." in output. Some clients don't put
+full date there and usually the day of week is missing and you are warned.
+No timezones are considered, the date is taken as-is.
+
+Message size is everything between end of message header and beginning of
+new email (or end of file). So only actual size of message text (body) is
+counted, not headers.
+
+Email clients are taken from
+.I X-Mailer:
+or
+.I User-Agent:
+or
+.I X-Newsreader:
+headers and some grouping is done to avoid different versions of the same
+mailer to take the whole TOP 10. There is also work-around for Pine mailer
+(MLS will search also 
+.I Message-ID:
+header).
+.SS What is quoting? Why I have it 95%?
+What is quoting? When you reply to some message, you can insert part of the
+original message there, you quote the author of original message. Every line
+of original text is usually prepended with 
+.I >
+or
+.IR "MP>" ","
+where MP are initials of the original sender's name (for example The Bat! uses
+this second format).
+
+And what is "quote ratio"? It's size of quoted text divided by total size
+of message, specified in percent. It's included in stats, because many
+people reply to message, add one line of text and leaving there for
+example 10 pages of original text, which makes the quote ratio even
+higher than 90%! In times of FIDONET, there were conferences, where quote
+ratio higher than 50% was forbidden. Try to think about it when replying
+to message in mailing list where more than 300 people will download and
+read it.
+.SS And now all the stats
+At first, there are TOP 10 tables (or TOP XX when using
+.I "-n XX"
+parameter). First table shows people who have written most
+messages, how much and how many percent of total message count it is. Last
+row shows the "other" - number of messages written by everyone not listed
+above and how many percent it is. Second and third tables are similar to this
+one - they also show best authors, but not by the number of messages written.
+Authors are sorted by total (or average) size of all their messages, but
+without quoting (size of message minus how much was quoted in that msg).
+Next table shows most successful subjects and how many messages with
+this subject have been posted. The other table shows most used email clients.
+The last table show people with maximal quote ratio. It's computed as sum of
+quoted text in all his/her messages divided by total size of those messages.
+Last row shows an average - sum of quoted text in all messages divided by
+total size of all messages.
+
+Next part of stats are some graphs. They show how much messages have been
+written during different hours of day, days of month and days of week. From
+these you can see for example when (and how much) people sleep :) or if they
+work during the working-hours or just write tons of messages...
+
+Next part contains info about messages which are BEST in something - message
+with max. quote ratio, longest message and some details about most successful
+subject.
+
+At the end, there is final summary - total number of messages, their total
+and average size and number of different authors and subjects.
+.SS MIME (Multipurpose Internet Mail Extensions)
+What is it? Original implementation email permitted only 7bit ASCII messages.
+But during the time, there was need to send international or even binary
+files. MIME defines how can these be encoded into 7bit form suitable for
+emailing and how to decode it back to human readable form.
+
+In email message, you can have MIME-encoded text (body of message), but also
+some headers - for example subject and From field.
+.B MLS
+tries to find out if subject lines are MIME-encoded and if so, it tries to
+decode it, to present it to you in human-readable form. You can read more
+about MIME in RFC 1521 and 1522.
+.SS Inspiration
+I was inspired by similar DOS program used before few years in FIDONET and
+Slovak ULTRANET. It was created by Ivan Friedlander.
+.SH BUGS/TODO
+.IP \(bu
+doesn't support header fields splitted to more lines (you can use
+.BR formail (1)
+to put them to one line before using MLS)
+.IP \(bu
+charset conversion in MIME-decoding
+.IP \(bu
+more stats
+.SH VERSION
+This man page is written for
+.B mailliststat
+version
+.IR "1.3" .
+.SH AUTHOR
+.B mailliststat
+(MailListStat) is written by Marek -Marki- Podmaka <marki@nexin.sk>.
+.SH SEE ALSO
+Visit
+.UR http://freshmeat.net/projects/mls
+http://freshmeat.net/projects/mls
+.UE
+for more information and latest version of
+.BR mailliststat .
+.SH COPYING
+.B MailListStat
+- print useful statistics on email messages
+Copyright (C) 2001-2003  Marek Podmaka <marki@nexin.sk>
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
diff -Nur mailliststat-1.3/Makefile mailliststat-1.3.new/Makefile
--- mailliststat-1.3/Makefile	2005-12-01 21:52:01.000000000 +0100
+++ mailliststat-1.3.new/Makefile	2005-12-01 21:52:48.000000000 +0100
@@ -7,7 +7,7 @@
 #OPTIMIZE=-O7 -mpentiumpro
 OPTIMIZE=-O3
 
-PACKAGE=mls
+PACKAGE=mailliststat
 # debug symbols will be stripped anyway during 'make install'
 DEBUG=-g
 
diff -Nur mailliststat-1.3/mls.1 mailliststat-1.3.new/mls.1
--- mailliststat-1.3/mls.1	2005-12-01 21:19:04.000000000 +0100
+++ mailliststat-1.3.new/mls.1	1970-01-01 01:00:00.000000000 +0100
@@ -1,402 +0,0 @@
-.\" Copyright (c) 2001-2003, Marek -Marki- Podmaka <marki@nexin.sk>
-.TH mls 1 "June 2003" Utils "User Manuals"
-.SH NAME
-mls \- Display useful statistics on email messages
-.SH SYNOPSIS
-.B mls [-hvq] [-l
-.IB lang "] [-i"
-.IB file "] [-o"
-.IB file "] [-r|w|u"
-.IB file "] [-t|T"
-.IB text "] [-m"
-.IB mode "] [-n"
-.IB XX "] [-g"
-.IB xxxx "]
-.SH DESCRIPTION
-.B MailListStat
-is program that prints some "useful" statistical info on email messages. 
-It's main usage is in email conferences - mailing lists. Currently it 
-displays both
-.I tables
-and
-.IR graphs .
-You can select either TEXT or HTML output.
-.SH OPTIONS
-.TP
-.B \-h
-print help text and exit
-.TP
-.B \-q
-be quiet (print only errors to stderr)
-.TP
-.B \-v
-turn on verbose mode - in this mode it will print more info to
-.IR stderr
-- indication of progress (will print every 10th, 20th, ..., 90th, 100th, 
-200th, ..., 900th, 1000th, 2000th ... message being processed) and warnings 
-about malformed headers found
-.TP
-.BI \-l " lang"
-select output language; please note that this applies only to generated 
-statistics - program messages printed to
-.I stderr
-ale always in English. These languages are currently supported:
-.IR EN " (English),"
-.IR SK " (Slovak),"
-.IR IT " (Italian),"
-.IR FR " (Francais),"
-.IR DE " (Deutsch),"
-.IR ES " (Spanish),"
-.IR SR " (Serbian),"
-.IR BR " (Portugues Brasil)."
-.TP
-.BI \-i " file"
-name of input file (if not specified, use
-.IR stdin ")."
-This file should be in MBOX format. It should exist and be readable.
-.TP
-.BI \-o " file"
-name of output file (if not specified, use
-.IR stdout ")."
-If exists, it will be overwritten.
-.TP
-.BI \-r " file"
-read input from cache file instead of mailbox. You can read input either
-from mailbox or cache file, not both!
-.TP
-.BI \-w " file"
-write cache file (no stats produced). You can either produce text output
-or write cache file, not both! When writing cache file, output-related
-options are ignored.
-.TP
-.BI \-u " file"
-update cache file = read cache, read input, write cache. For use with .procmailrc/.forward
-.TP
-.BI \-t " text"
-name of mailing list this statistics is computed for. If specified, it is 
-just appended to the title of statistics, so it will be like "Statistics 
-from 16.8.2001 to 7.9.2001 for text", where
-.I text
-is whatever you put as this parameter (it could be name of the mailing list 
-or just its email, e.g.
-.IR "mobil@mobil.sk" ")."
-.TP
-.BI \-T " text"
-title text (only this will be printed as title); this can be used to supress
-normal title text (date of oldest/newest msg) and completely replace it with
-your text.
-.TP
-.BI \-m " mode"
-select mode of output (text, html, html2).
-.TP
-.BI \-n " XX"
-show TOP XX tables (default TOP 10). By default,
-.B mls
-displays tables of TOP 10 people, subjects, quoting or whatever. Using this 
-parameter, you can define how many lines shall these tables have.
-.TP
-.BI \-g " xxxx"
-graphs to show (Day, Week, Month, Year, Xnone) - specify first letter
-(e.g. -g dmy).
-.SH EXIT STATUS
-.TP
-.B 0
-Everything went OK and no error occurred.
-.TP
-.B 1
-Error in sscanf() while reading & parsing cache file. It means that the format
-of cache file is invalid. Try to create the cache file again.
-.TP
-.B 2
-Invalid command-line option/language. You have specified an invalid
-command-line parameter.
-.TP
-.B 3
-Cannot open input/output file. Please check that you have typed correct 
-filename and that you have read permissions for input file and write 
-permissions to destination directory (because output file must be created). 
-If output file exists, it's overwritten.
-.TP
-.B 4
-Not enough memory is available for dynamically allocated variables. This 
-could be caused by user-limits, because
-.B mls
-requires only few MBs of memory (it depends on number of messages processed 
-and number of different subjects and authors).
-.TP
-.B 5
-Error compiling regex. This error should not occur in world-available 
-versions.
-.SH USAGE
-.SS Input
-On input, there should be mailbox file in standard MBOX format. If the file
-is in different format, the results are unpredictable. There should be at
-least one email message, otherwise no stats can be computed.
-
-.B Warning:
-Be sure that no special messages are in input files (such as that
-with "DON'T DELETE THIS MESSAGE -- FOLDER INTERNAL DATA" subject), because
-they will be also analysed. Many programs (POP3/IMAP daemons, email readers)
-put their special messages to the mailbox. This message is only ignored when
-reporting oldest message found.
-.SS Output
-Statistics is put into output file (or stdout if unspecified) in specified
-language. All diagnostic messages are written to stderr and are in English.
-Output consists of several statistical data - tables, graphs and summaries.
-The title has two formats depending on
-.I "-t"
-parameter. If it's not specified, it looks like "Statistics from 16.8.2001 to
-7.9.2001", where first date is date of the oldest message found in input and
-second is date of the newest one. If there is for example
-.I "-t mobil@mobil.sk"
-parameter, it will look like "Statistics from 16.8.2001 to 7.9.2001 for
-mobil@mobil.sk". The problem is that date of oldest & newest msg is often wrong
-(thanks to bad date/time settings on PC of msg author), so you can specify
-entire title using command-line option
-.IR "-T" .
-When used, only your text will be printed as title, nothing more. There you can
-put for example something like "Statistics for mobil@mobil.sk".
-
-Now you have option (
-.IR -g ")"
-to specify which graphs you want to show - hours of Day, days of Week, days of Month,
-months of Year. Use 1st letters as argument to -g option (so
-.I -g dw
-will print just hours of Day and days of Week). Use
-.I -g x
-to disable printing of any graph. For example you don't want to show graph for months
-of Year if you are presenting stats for one month, but for full-year stats you
-probably want it.
-.SS HTML output
-You can choose between 2 modes of output - TEXT and HTML. When in HTML mode,
-.B mls
-will produce the output as HTML page. When you specify HTML2 mode, only
-the body of HTML document is produced (no header/footer) - it can be used
-to have different HTML header/footer when calling
-.B mls
-as CGI or when using
-PHP wrapper. The output consists of HTML tables and bar graphs. Almost every
-aspect of how it looks can be configured by modifying CSS style-sheet. Please
-note that files
-.I "style_mls.css"
-and
-.I "bar.gif"
-must be present in the same
-directory as produced HTML file. You can, however, modify both to best suit
-your needs. Everything should be clear after reading comments in CSS file and
-looking at the produced HTML source.
-
-I was unsure what type of graphs to produce. I have tried also horizontal
-bar graphs and if you want to try them, just uncomment part of code in
-PrintGraphHtml() in mls_text.c.
-.SS Cache file support
-Instead of producing statistics in text format, you can save all the
-generated values/results into "cache" file. Retrieving information from this
-file is very fast, so it is useful for integration with web pages. Now you
-can update the cache file just after new mail was received. Users can view
-actual stats using
-.B mls
- as CGI script. It has an advantage over static stats
-that user can choose language and others options and it will be generated
-in a moment!
-
-To update cache file, use the
-.I -u
-option. It works like this: first, the stats
-are loaded from cache file (doesn't have to exist) and then new message(s)
-to be added are read from stdin (or from -i file) and added to the stats.
-Finally the updated stats are written back to the cache file. The process
-is really quick, because usually only one message is added at a time. This is
-useful mainly for updating cache files upon receiving new message. In the
-"examples/" subdir, you can find examples of integration with your .forward
-and .procmailrc files. By running MLS more than once, you can generate cache
-files for individual months and also for whole years (see examples). Then use
-some PHP script to present list of these cache files to user.
-
-Format of cache files was changed in version 1.3, because of new stats added.
-Now it contains version info, so mls can inform you that you have to
-re-create that cache file with new version. Unfortunately, you have to
-re-create them also when you want new email clients to be recognized also in
-old (already processed) messages. Note that email clients detection was buggy
-in 1.2.2 (a lot of clients not recognized).
-.SS PHP wrapper
-I have written also PHP wrapper for
-.B mls
-to make it more "interactive". It has
-two major advantages over plain HTML output from
-.BR mls :
-User can choose output
-language and number of TOP items to show. It works by running
-.B mls
-with appopriate command-line options. It's safe, because only two items from user
-are language and topXX which are checked using regexp, so running arbitrary
-code is not possible. You can also alter
-.B mls
-output - for example change @ in email addresses to (at) to prevent spamming.
-  
-You can have normal MBOX file as input, but I recommend using cache file.
-When using cache file, the stats are produced in a moment. You can see how
-long it took to generate the page, see the last line of HTML source. However,
-there is minor speed problem. It takes longer when you specify to show many
-topXX (like 999). The problem is regexp that searches for @. It has to search
-for it in whole
-.B mls
-output together and when it is large, it takes a while
-(1.1 seconds on my 2.1GHz pentium4). I have added an option which should use
-Perl-compatible regex function (preg_replace) instead of POSIX (ereg_replace),
-if available. This will result in MUCH faster execution (50ms instead of 1.1sec).
-.SH NOTES
-.SS How it is all computed?
-OK, so let's start from beginning - the format of MBOX file. It's plain text
-file containing some email messages delimited with one empty line. Each
-message starts with line like this
-.IR "From abc@a.sk  Thu Aug 16 15:48:58 2001" .
-After this line, there are few headers, one empty line and message text.
-Storing emails in this format is quite common - your incoming mail is usually
-saved in MBOX format and also your folders in mail-readers like
-.BR elm (1),
-.BR pine (1),
-.BR mutt (1)...
-
-Who is author of an email message? It's taken from
-.I From:
-header field and everything except the actual email address (like your full
-name) is stripped off using quite simple regular expression (regexp).
-
-Subject is taken from
-.I Subject:
-header field. If it contains some
-.IR "Re:" ","
-those will be stripped off. There can be up to 5 of them. Also counted format
-(
-.IR "Re[3]:" ")"
-is supported. For example The Bat! email client uses it. MIME-decoding is
-applied to subject lines (see below).
-  
-Date is just everything in the
-.I Date:
-header. This header is generated by
-the email client, so it's date of message creation and it doesn't have to
-be present in each message. If it isn't, you are warned by message like
-"Warning: 1 message(s) not counted." in output. Some clients don't put
-full date there and usually the day of week is missing and you are warned.
-No timezones are considered, the date is taken as-is.
-
-Message size is everything between end of message header and beginning of
-new email (or end of file). So only actual size of message text (body) is
-counted, not headers.
-
-Email clients are taken from
-.I X-Mailer:
-or
-.I User-Agent:
-or
-.I X-Newsreader:
-headers and some grouping is done to avoid different versions of the same
-mailer to take the whole TOP 10. There is also work-around for Pine mailer
-(MLS will search also 
-.I Message-ID:
-header).
-.SS What is quoting? Why I have it 95%?
-What is quoting? When you reply to some message, you can insert part of the
-original message there, you quote the author of original message. Every line
-of original text is usually prepended with 
-.I >
-or
-.IR "MP>" ","
-where MP are initials of the original sender's name (for example The Bat! uses
-this second format).
-
-And what is "quote ratio"? It's size of quoted text divided by total size
-of message, specified in percent. It's included in stats, because many
-people reply to message, add one line of text and leaving there for
-example 10 pages of original text, which makes the quote ratio even
-higher than 90%! In times of FIDONET, there were conferences, where quote
-ratio higher than 50% was forbidden. Try to think about it when replying
-to message in mailing list where more than 300 people will download and
-read it.
-.SS And now all the stats
-At first, there are TOP 10 tables (or TOP XX when using
-.I "-n XX"
-parameter). First table shows people who have written most
-messages, how much and how many percent of total message count it is. Last
-row shows the "other" - number of messages written by everyone not listed
-above and how many percent it is. Second and third tables are similar to this
-one - they also show best authors, but not by the number of messages written.
-Authors are sorted by total (or average) size of all their messages, but
-without quoting (size of message minus how much was quoted in that msg).
-Next table shows most successful subjects and how many messages with
-this subject have been posted. The other table shows most used email clients.
-The last table show people with maximal quote ratio. It's computed as sum of
-quoted text in all his/her messages divided by total size of those messages.
-Last row shows an average - sum of quoted text in all messages divided by
-total size of all messages.
-
-Next part of stats are some graphs. They show how much messages have been
-written during different hours of day, days of month and days of week. From
-these you can see for example when (and how much) people sleep :) or if they
-work during the working-hours or just write tons of messages...
-
-Next part contains info about messages which are BEST in something - message
-with max. quote ratio, longest message and some details about most successful
-subject.
-
-At the end, there is final summary - total number of messages, their total
-and average size and number of different authors and subjects.
-.SS MIME (Multipurpose Internet Mail Extensions)
-What is it? Original implementation email permitted only 7bit ASCII messages.
-But during the time, there was need to send international or even binary
-files. MIME defines how can these be encoded into 7bit form suitable for
-emailing and how to decode it back to human readable form.
-
-In email message, you can have MIME-encoded text (body of message), but also
-some headers - for example subject and From field.
-.B MLS
-tries to find out if subject lines are MIME-encoded and if so, it tries to
-decode it, to present it to you in human-readable form. You can read more
-about MIME in RFC 1521 and 1522.
-.SS Inspiration
-I was inspired by similar DOS program used before few years in FIDONET and
-Slovak ULTRANET. It was created by Ivan Friedlander.
-.SH BUGS/TODO
-.IP \(bu
-doesn't support header fields splitted to more lines (you can use
-.BR formail (1)
-to put them to one line before using MLS)
-.IP \(bu
-charset conversion in MIME-decoding
-.IP \(bu
-more stats
-.SH VERSION
-This man page is written for
-.B mls
-version
-.IR "1.3" .
-.SH AUTHOR
-.B mls
-(MailListStat) is written by Marek -Marki- Podmaka <marki@nexin.sk>.
-.SH SEE ALSO
-Visit
-.UR http://freshmeat.net/projects/mls
-http://freshmeat.net/projects/mls
-.UE
-for more information and latest version of
-.BR mls .
-.SH COPYING
-.B MailListStat
-- print useful statistics on email messages
-Copyright (C) 2001-2003  Marek Podmaka <marki@nexin.sk>
-
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation; either version 2 of the License, or
-(at your option) any later version.
-
-This program is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with this program; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
diff -Nur mailliststat-1.3/README.txt mailliststat-1.3.new/README.txt
--- mailliststat-1.3/README.txt	2005-12-01 21:19:04.000000000 +0100
+++ mailliststat-1.3.new/README.txt	2005-12-01 21:38:48.000000000 +0100
@@ -89,15 +89,15 @@
 
 * HTML output
   You can choose between 2 modes of output - TEXT and HTML. When in HTML mode,
-  mls will produce the output as HTML page. When you specify HTML2 mode, only
-  the body of HTML document is produced (no header/footer) - it can be used
-  to have different HTML header/footer when calling mls as CGI or when using
-  PHP wrapper. The output consists of HTML tables and bar graphs. Almost every
-  aspect of how it looks can be configured by modifying CSS style-sheet. Please
-  note that files "style_mls.css" and "bar.gif" must be present in the same
-  directory as produced HTML file. You can, however, modify both to best suit
-  your needs. Everything should be clear after reading comments in CSS file and
-  looking at the produced HTML source.
+  mailliststat will produce the output as HTML page. When you specify HTML2
+  mode, only the body of HTML document is produced (no header/footer) - it can
+  be used to have different HTML header/footer when calling mailliststat as
+  CGI or when using PHP wrapper. The output consists of HTML tables and bar
+  graphs. Almost every aspect of how it looks can be configured by modifying
+  CSS style-sheet. Please note that files "style_mls.css" and "bar.gif" must
+  be present in the same directory as produced HTML file. You can, however,
+  modify both to best suit your needs. Everything should be clear after
+  reading comments in CSS file and looking at the produced HTML source.
 
   I was unsure what type of graphs to produce. I have tried also horizontal
   bar graphs and if you want to try them, just uncomment part of code in
@@ -124,7 +124,7 @@
   some PHP script to present list of these cache files to user.
 
   Format of cache files was changed in version 1.3, because of new stats added.
-  Now it contains version info, so mls can inform you that you have to
+  Now it contains version info, so mailliststat can inform you that you have to
   re-create that cache file with new version. Unfortunately, you have to
   re-create them also when you want new email clients to be recognized also in
   old (already processed) messages. Note that email clients detection was buggy
