diff -r 0dbe5746d391 -r bdc09bc6c8c2 src/latrine.c
--- a/src/latrine.c	Sun Feb 28 12:47:16 2010 +0100
+++ b/src/latrine.c	Thu Jan 01 00:00:00 1970 +0000
@@ -79,8 +79,8 @@

 			exit(EXIT_FAILURE);
 		}
 
-	MALLOC(src, strlen(home) + strlen("/.latrine/latrine-0.log") + 1);
-	MALLOC(dst, strlen(home) + strlen("/.latrine/latrine-0.log") + 1);
+	MALLOC(src, char*, strlen(home) + strlen("/.latrine/latrine-0.log") + 1);
+	MALLOC(dst, char*, strlen(home) + strlen("/.latrine/latrine-0.log") + 1);
 
 	for (i = 5; i >= 0; i--) {
 		sprintf(src, "%s/.latrine/latrine-%d.log", home, i);
diff -r 0dbe5746d391 -r bdc09bc6c8c2 src/memory.h
--- a/src/memory.h	Sun Feb 28 12:47:16 2010 +0100
+++ b/src/memory.h	Sun Sep 05 12:17:28 2010 +0200
@@ -35,18 +35,18 @@
 	} \
 }
 
-#define MALLOC(DST, SIZE) \
+#define MALLOC(DST, TYPE, SIZE) \
 { \
-	if ((DST = malloc(SIZE)) == NULL) { \
+	if ((DST = (TYPE)malloc(SIZE)) == NULL) { \
 		endwin(); \
 		fprintf(LOG, "malloc: %m"); \
 		exit(1); \
 	} \
 }
 
-#define REALLOC(DST, SIZE) \
+#define REALLOC(DST, TYPE, SIZE) \
 { \
-	if ((DST = realloc(DST, SIZE)) == NULL) { \
+	if ((DST = (TYPE)realloc(DST, SIZE)) == NULL) { \
 		endwin(); \
 		fprintf(LOG, "realloc: %m"); \
 		exit(1); \
@@ -73,7 +73,7 @@
 
 #define WMALLOC(DST, SIZE) \
 { \
-	if ((DST = malloc((SIZE) * sizeof(wchar_t))) == NULL) { \
+	if ((DST = (wchar_t*)malloc((SIZE) * sizeof(wchar_t))) == NULL) { \
 		endwin(); \
 		fprintf(LOG, "malloc: %m"); \
 		exit(1); \
diff -r 0dbe5746d391 -r bdc09bc6c8c2 src/charset.h
--- a/src/charset.h	Sun Feb 28 12:47:16 2010 +0100
+++ b/src/charset.h	Sun Sep 05 12:17:28 2010 +0200
@@ -18,10 +18,10 @@
 #ifndef LATRINE_CHARSET_H
 #define LATRINE_CHARSET_H
 
-inline void make_digraph(wint_t, wint_t*);
-inline int  wcsappend(int, wchar_t*, wchar_t, size_t);
-inline int  wcsbackspace(wchar_t*, wchar_t*);
-inline void wcsreverse(wchar_t*);
+void make_digraph(wint_t, wint_t*);
+int  wcsappend(int, wchar_t*, wchar_t, size_t);
+int  wcsbackspace(wchar_t*, wchar_t*);
+void wcsreverse(wchar_t*);
 #define mbslen(s) mbstowcs(NULL, s, 0)
 
 int load_keymap(int, const char*);
diff -r 0dbe5746d391 -r bdc09bc6c8c2 src/readline.h
--- a/src/readline.h	Sun Feb 28 12:47:16 2010 +0100
+++ b/src/readline.h	Sun Sep 05 12:17:28 2010 +0200
@@ -22,7 +22,7 @@
 void read_enter(WINDOW*);
 int readline(WINDOW*, int, int, int, int, int, wchar_t*, size_t, int (*)(wint_t, wint_t, const void*), const void*);
 
-int  make_linebreaks(char***, const char*, int);
+int  make_linebreaks(char***, const char*, size_t);
 void free_linebreaks(char**);
 
 #endif
diff -r 0dbe5746d391 -r bdc09bc6c8c2 src/readline.c
--- a/src/readline.c	Sun Feb 28 12:47:16 2010 +0100
+++ b/src/readline.c	Sun Sep 05 12:17:28 2010 +0200
@@ -69,7 +69,8 @@
 	wchar_t alpha  = 0;
 	int     status = 0;
 	int     dig    = 0;
-	wint_t  c, r;
+	int     r;
+	wint_t  c;
 
 	keypad(win, TRUE);
 	wbkgdset(win, COLOR_PAIR(COLOR_INPUT));
@@ -144,7 +145,7 @@
 
 /* more than one spaces are skipped on break, but kept when not */
 int
-make_linebreaks(char ***result, const char *line, int width)
+make_linebreaks(char ***result, const char *line, size_t width)
 {
 	char cur_ln[BUFLEN];
 	char *buffer, *p, *q, *r, *s, *t;
@@ -190,7 +191,7 @@
 			memcpy(cur_ln, p, r - p);
 			cur_ln[r-p] = 0;
 		}
-		REALLOC(*result, (i + 2) * sizeof(char*));
+		REALLOC(*result, char**, (i+2) * sizeof(char*));
 		STRNDUP((*result)[i++], p, q - p);
 		if (*q == '\n')
 			q++;
diff -r 0dbe5746d391 -r bdc09bc6c8c2 src/delscr.c
--- a/src/delscr.c	Sun Feb 28 12:47:16 2010 +0100
+++ b/src/delscr.c	Sun Sep 05 12:17:28 2010 +0200
@@ -51,7 +51,7 @@
 	const char *title;
 	wint_t wch;
 
-	MALLOC(buffer, (n = wcstombs(NULL, known->word[0].word, 0) + wcstombs(NULL, known->word[1].word, 0) +
+	MALLOC(buffer, char*, (n = wcstombs(NULL, known->word[0].word, 0) + wcstombs(NULL, known->word[1].word, 0) +
 			strlen(_("Do you really want to remove this translation?")) + 7));
 	i = wcstombs(buffer, known->word[0].word, n);
 	strcat(buffer, " -> ");
diff -r 0dbe5746d391 -r bdc09bc6c8c2 src/popup.c
--- a/src/popup.c	Sun Feb 28 12:47:16 2010 +0100
+++ b/src/popup.c	Sun Sep 05 12:17:28 2010 +0200
@@ -51,7 +51,7 @@

 	va_start(ap, text);
 	n = vsnprintf(NULL, 0, text, ap);
 	va_end(ap);
-	MALLOC(buffer, n + 1);
+	MALLOC(buffer, char*, n + 1);
 	va_start(ap, text);
 	vsprintf(buffer, text, ap);
 	va_end(ap);
