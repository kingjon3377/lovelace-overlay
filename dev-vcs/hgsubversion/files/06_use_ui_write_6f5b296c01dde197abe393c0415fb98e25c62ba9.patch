# HG changeset patch
# User Pulkit Goyal <pulkit@yandex-team.ru>
# Date 1545838812 -10800
# Node ID 6f5b296c01dde197abe393c0415fb98e25c62ba9
# Parent  7bb6562feb85c1cc628b18171d50695b43abb6f8
verify: use ui.write() instead of ui.warn()

Looks like ui.warn() is being written to output directly and it's not pushed to
buffer which ui objects maintain. Let's use ui.write() instead which is used in
the other instance of same error messages too.

This fixes test_utility_commands.py which was failing for me on tip of default
branch.

diff --git a/hgsubversion/verify.py b/hgsubversion/verify.py
--- a/hgsubversion/verify.py
+++ b/hgsubversion/verify.py
@@ -175,19 +175,19 @@
 
                     if 'svn:executable' in self.props:
                         if fctx.flags() != 'x':
-                            self.ui.warn('wrong flags for: %s\n' % self.file)
+                            self.ui.write('wrong flags for: %s\n' % self.file)
                             self.failed = True
                     elif 'svn:special' in self.props:
                         hgdata = 'link ' + hgdata
                         if fctx.flags() != 'l':
-                            self.ui.warn('wrong flags for: %s\n' % self.file)
+                            self.ui.write('wrong flags for: %s\n' % self.file)
                             self.failed = True
                     elif fctx.flags():
-                        self.ui.warn('wrong flags for: %s\n' % self.file)
+                        self.ui.write('wrong flags for: %s\n' % self.file)
                         self.failed = True
 
                     if hgdata != svndata:
-                        self.ui.warn('difference in: %s\n' % self.file)
+                        self.ui.write('difference in: %s\n' % self.file)
                         diff_file(self.file, svndata)
                         self.failed = True
 
@@ -214,10 +214,10 @@
                 self.ui.progress('verify', None, total=self.total)
 
                 for f in self.unexpected:
-                    self.ui.warn('unexpected file: %s\n' % f)
+                    self.ui.write('unexpected file: %s\n' % f)
                     self.failed = True
                 for f in self.missing:
-                    self.ui.warn('missing file: %s\n' % f)
+                    self.ui.write('missing file: %s\n' % f)
                     self.failed = True
                 return not self.failed
 
