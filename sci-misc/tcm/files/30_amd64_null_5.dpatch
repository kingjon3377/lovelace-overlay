diff -Nur tcm-2.20+TSQD.orig/src/ui/temporalpropertydialog.c tcm-2.20+TSQD/src/ui/temporalpropertydialog.c
--- tcm-2.20.orig/src/ui/temporalpropertydialog.c	2004-07-21 19:48:13.000000000 +0200
+++ tcm-2.20/src/ui/temporalpropertydialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -61,30 +61,30 @@
 	//ManageSensitiveToggle(False);
 
 	form = XtVaCreateWidget("form",
-		xmFormWidgetClass, GetWidget(), 0);
+		xmFormWidgetClass, GetWidget(), NULL);
 	SetSelectionLabel(XtVaCreateManagedWidget("LTL property",
 		xmLabelWidgetClass, form, 
 		XmNleftAttachment, XmATTACH_FORM,
-		XmNtopAttachment, XmATTACH_FORM, 0));
+		XmNtopAttachment, XmATTACH_FORM, NULL));
 	SetText(XtVaCreateManagedWidget("find_text",
 		xmTextFieldWidgetClass, form,
 		XmNleftAttachment, XmATTACH_FORM,
 		XmNrightAttachment, XmATTACH_FORM,
 		XmNtopAttachment, XmATTACH_WIDGET,
-		XmNtopWidget, GetSelectionLabel(), 0));
+		XmNtopWidget, GetSelectionLabel(), NULL));
 	toggleRC = XtVaCreateManagedWidget("toggleRC",
 		xmRowColumnWidgetClass, form,
 		XmNorientation, XmHORIZONTAL, 
-		XmNleftAttachment, XmATTACH_FORM, 0);
+		XmNleftAttachment, XmATTACH_FORM, NULL);
 	sensitiveToggle = XtVaCreateManagedWidget("syntactic encoding", 
 		xmToggleButtonWidgetClass, toggleRC, 
-		XmNset, False, 0);
+		XmNset, False, NULL);
 	substringToggle = XtVaCreateWidget("reduction", 
 		xmToggleButtonWidgetClass, toggleRC,
-		XmNset, False, 0);
+		XmNset, False, NULL);
 	nameOnlyToggle = XtVaCreateWidget("strong fairness", 
 		xmToggleButtonWidgetClass, toggleRC,
-		XmNset, True, 0);
+		XmNset, True, NULL);
 	AttachToggles();
 
 	XtManageChild(form);
@@ -94,7 +94,7 @@
 void TPDialog::AttachToggles() {
 	XtVaSetValues(toggleRC, 
 		XmNtopAttachment, XmATTACH_WIDGET,
-		XmNtopWidget, GetText(), 0);
+		XmNtopWidget, GetText(), NULL);
 }
 
 void TPDialog::ManageSensitiveToggle(bool b) {
diff -Nur tcm-2.20+TSQD.orig/src/ui/textalignmentdialog.c tcm-2.20+TSQD/src/ui/textalignmentdialog.c
--- tcm-2.20.orig/src/ui/textalignmentdialog.c	2004-07-21 19:48:05.000000000 +0200
+++ tcm-2.20/src/ui/textalignmentdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -92,5 +92,5 @@
 		AddLiteClue((*tl)[1], "Center");
 		AddLiteClue((*tl)[2], "Bottom");
 	}
-        XtVaSetValues(rc, XmNnumColumns, 3, 0);
+        XtVaSetValues(rc, XmNnumColumns, 3, NULL);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/texteditdialog.c tcm-2.20+TSQD/src/ui/texteditdialog.c
--- tcm-2.20.orig/src/ui/texteditdialog.c	2004-07-21 19:48:13.000000000 +0200
+++ tcm-2.20/src/ui/texteditdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -35,7 +35,7 @@
 	if (check(GetWidget())) {
 		XtVaSetValues(GetTextWidget(), 
 			XmNeditable, True,
-			XmNcursorPositionVisible, True, 0);
+			XmNcursorPositionVisible, True, NULL);
 		ManageCancelButton(True);
 		SetOKButtonLabel("Ok");
 		XtManageChild(GetTextWidget());
diff -Nur tcm-2.20+TSQD.orig/src/ui/textfieldlistdialog.c tcm-2.20+TSQD/src/ui/textfieldlistdialog.c
--- tcm-2.20.orig/src/ui/textfieldlistdialog.c	2004-07-21 19:48:11.000000000 +0200
+++ tcm-2.20/src/ui/textfieldlistdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -60,18 +60,18 @@
 		xmRowColumnWidgetClass, GetWidget(),
 		XmNnumColumns, 2,
 		XmNpacking, XmPACK_COLUMN,
-		XmNorientation, XmVERTICAL, 0);
+		XmNorientation, XmVERTICAL, NULL);
 	labels = new Widget[names->count()];
 	for (names->first(); !names->done(); names->next()) {
 		Widget w1 = XtVaCreateManagedWidget(names->cur()->getstr(), 
-			xmLabelWidgetClass, rc, 0);
+			xmLabelWidgetClass, rc, NULL);
 		labels[numLabels] = w1;
 		numLabels++;
 	}
 	textFields = new Widget[values->count()];
 	for (values->first(); !values->done(); values->next()) {
 		Widget w2 = XtVaCreateManagedWidget("field",
-			xmTextFieldWidgetClass, rc, 0);
+			xmTextFieldWidgetClass, rc, NULL);
 		XmTextSetString(w2, (char *)values->cur()->getstr());
 		textFields[numTextFields] = w2;
 		numTextFields++;
@@ -83,7 +83,7 @@
 void TextFieldListDialog::SetFieldWidth(unsigned n) {
 	fieldWidth = n;
 	for (unsigned i=0; i<numTextFields; i++)
-		XtVaSetValues(textFields[i], XmNcolumns, n, 0);
+		XtVaSetValues(textFields[i], XmNcolumns, n, NULL);
 }
 
 unsigned TextFieldListDialog::NumFields() {
@@ -92,13 +92,13 @@
 
 void TextFieldListDialog::SetLabel(unsigned i, const string *n) {
 	if (check(i < numLabels))
-		XtVaSetValues(labels[i], XmNvalue, n->getstr(), 0);
+		XtVaSetValues(labels[i], XmNvalue, n->getstr(), NULL);
 }
 
 void TextFieldListDialog::GetLabel(unsigned i, string *n) {
 	if (check(i < numLabels)) {
 		char *s;
-		XtVaGetValues(labels[i], XmNvalue, &s, 0);
+		XtVaGetValues(labels[i], XmNvalue, &s, NULL);
 		*n = s;
 		XtFree(s);
 	}
diff -Nur tcm-2.20+TSQD.orig/src/ui/textviewdialog.c tcm-2.20+TSQD/src/ui/textviewdialog.c
--- tcm-2.20.orig/src/ui/textviewdialog.c	2004-07-21 19:48:24.000000000 +0200
+++ tcm-2.20/src/ui/textviewdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -71,7 +71,7 @@
 	Arg args[24]; int i = 0;
 	XtSetArg(args[i], XmNautoUnmanage, GetAutoUnmanage()); i++;
 	SetWidget(XmCreateMessageDialog(GetParent(), (char *)GetClassName(), args, i));
-	XtVaSetValues(XtParent(GetWidget()), XmNallowShellResize, True, 0);
+	XtVaSetValues(XtParent(GetWidget()), XmNallowShellResize, True, NULL);
 }
 
 void TextViewDialog::Configure() {
@@ -89,7 +89,7 @@
 	XtVaSetValues(menuBar,
 	 	XmNtopAttachment, XmATTACH_FORM,
 	 	XmNleftAttachment, XmATTACH_FORM,
-	 	XmNrightAttachment, XmATTACH_FORM, 0);
+	 	XmNrightAttachment, XmATTACH_FORM, NULL);
 	fileMenu = new Menu(menuBar, Menu::PULLDOWN, "File", 0, fileItems);
 	editMenu = new Menu(menuBar, Menu::PULLDOWN, "Edit", 0, editItems);
 	searchMenu = new Menu(menuBar, Menu::PULLDOWN, "Search", 0, 
@@ -97,7 +97,7 @@
 	// create a manager widget as a child of the dialog, to be used
 	// as the work area of the dialog, replacing the label and the icon.
 	Widget form = XtVaCreateWidget("form1", xmFormWidgetClass, 
-					GetWidget(), 0);
+					GetWidget(), NULL);
 	XtVaSetValues(form, 
 		XmNtopAttachment, XmATTACH_WIDGET,
 		XmNtopWidget, menuBar,
@@ -105,7 +105,7 @@
 		XmNbottomAttachment, XmATTACH_WIDGET,
 		XmNbottomWidget, XmMessageBoxGetChild(GetWidget(), 
 			XmDIALOG_SEPARATOR),
-		XmNrightAttachment, XmATTACH_FORM, 0);
+		XmNrightAttachment, XmATTACH_FORM, NULL);
 	// create text field.
 	i = 0;
 	XtSetArg(args[i], XmNeditable, False); i++;
@@ -116,7 +116,7 @@
 	XtVaSetValues(textStatus,
 	 	XmNtopAttachment, XmATTACH_FORM,
 	 	XmNleftAttachment, XmATTACH_FORM,
-	 	XmNrightAttachment, XmATTACH_FORM, 0);
+	 	XmNrightAttachment, XmATTACH_FORM, NULL);
 	i = 0;
 	XtSetArg(args[i], XmNscrollVertical, True); i++;
 	XtSetArg(args[i], XmNrows, 6); i++;
@@ -135,7 +135,7 @@
 		XmNtopWidget, textStatus,
 	 	XmNrightAttachment, XmATTACH_FORM,
 	 	XmNbottomAttachment, XmATTACH_FORM,
-	 	XmNleftAttachment, XmATTACH_FORM, 0);
+	 	XmNleftAttachment, XmATTACH_FORM, NULL);
 	XtManageChild(menuBar);
 	XtManageChild(textStatus);
 	XtManageChild(textWidget);
@@ -361,14 +361,14 @@
 	if (!check(textWidget))
 		return;
 	if (nrOfRows <= maxRows)
-		XtVaSetValues(textWidget, XmNrows, nrOfRows, 0);
+		XtVaSetValues(textWidget, XmNrows, nrOfRows, NULL);
 }
 
 void TextViewDialog::SetTextColumns(int nrOfColumns) {
 	if (!check(textWidget))
 		return;
 	if (nrOfColumns <= maxColumns)
-		XtVaSetValues(textWidget, XmNcolumns, nrOfColumns, 0);
+		XtVaSetValues(textWidget, XmNcolumns, nrOfColumns, NULL);
 }
 
 void TextViewDialog::SetTextSize(int nrOfRows, int nrOfColumns) {
@@ -382,11 +382,11 @@
 	if (!check(textWidget))
 		return;
 	short rows, columns;
-	XtVaGetValues(textWidget, XmNrows, &rows, XmNcolumns, &columns, 0);
+	XtVaGetValues(textWidget, XmNrows, &rows, XmNcolumns, &columns, NULL);
 	if (rows > maxRows)
-		XtVaSetValues(textWidget, XmNrows, &maxRows, 0);
+		XtVaSetValues(textWidget, XmNrows, &maxRows, NULL);
 	if (columns > maxColumns)
-		XtVaSetValues(textWidget, XmNcolumns, &maxColumns, 0);
+		XtVaSetValues(textWidget, XmNcolumns, &maxColumns, NULL);
 }
 
 void TextViewDialog::Print() {
@@ -469,7 +469,7 @@
 		char *s = (char *)text.getstr();
 		XmTextSetString(textWidget, s);
 		short c;
-		XtVaGetValues(textWidget, XmNcolumns, &c, 0);
+		XtVaGetValues(textWidget, XmNcolumns, &c, NULL);
 		SetStatus("Load succeeded");
 		return True;
 	}
diff -Nur tcm-2.20+TSQD.orig/src/ui/togglelistdialog.c tcm-2.20+TSQD/src/ui/togglelistdialog.c
--- tcm-2.20.orig/src/ui/togglelistdialog.c	2004-07-21 19:48:44.000000000 +0200
+++ tcm-2.20/src/ui/togglelistdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -71,10 +71,10 @@
 	toggleList = new Widget[items->count()];
 	if (*label != "") {
 		Widget frame = XtVaCreateManagedWidget("frame",
-			xmFrameWidgetClass, toggleBox, 0);
+			xmFrameWidgetClass, toggleBox, NULL);
 		XtVaCreateManagedWidget(label->getstr(),
 			xmLabelWidgetClass, frame,
-			XmNchildType, XmFRAME_TITLE_CHILD, 0);
+			XmNchildType, XmFRAME_TITLE_CHILD, NULL);
 	}
 	for (items->first(); !items->done(); items->next()) {
 		const char *s = items->cur()->getstr();
@@ -83,7 +83,7 @@
 				xmToggleButtonWidgetClass, toggleBox,
 				XmNuserData, i,
 				XmNhighlightThickness, 0,
-				XmNset, i==0, 0);
+				XmNset, i==0, NULL);
 		toggleList[numToggles] = w;
 		numToggles++;
 		i++;
@@ -106,14 +106,14 @@
 		Pixmap pixmap = bitmap->CreatePixmap(tb, GetDisplay());
 		XtVaSetValues(tb, 
 			XmNlabelType, XmPIXMAP,
-                        XmNlabelPixmap, pixmap, 0);
+                        XmNlabelPixmap, pixmap, NULL);
 	}
 }
 
 void ToggleListDialog::SetToggleText(unsigned i, const string *txt) {
  	if (check(i < numToggles)) {
 		XmString s = CreateXmString(txt->getstr());
-		XtVaSetValues(toggleList[i], XmNlabelString, s, 0);
+		XtVaSetValues(toggleList[i], XmNlabelString, s, NULL);
 		XmStringFree(s);
 	}
 }
@@ -121,7 +121,7 @@
 void ToggleListDialog::GetToggleText(unsigned i, string *txt) {
 	if (check(i < numToggles)) {
 		XmString s = CreateXmString("");
-		XtVaGetValues(toggleList[i], XmNlabelString, &s, 0);
+		XtVaGetValues(toggleList[i], XmNlabelString, &s, NULL);
 		char *str;
 		if (XmStringGetLtoR(s, XmFONTLIST_DEFAULT_TAG, &str)) {
 			*txt = str;
