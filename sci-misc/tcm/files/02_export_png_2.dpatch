diff -urNad /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/grafport.h tcm-2.20/src/ui/grafport.h
--- /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/grafport.h	2002-05-28 05:33:08.000000000 -0300
+++ tcm-2.20/src/ui/grafport.h	2003-05-19 18:43:19.000000000 -0300
@@ -210,11 +210,11 @@
 // Drawing Ellipses
 	// used in lineend.c
 	///
-	virtual void DrawEllipse(double x, double y,
-		double wd, double ht)=0;
-	/// 
-	virtual void FillEllipse(double x, double y,
-		double wd, double ht)=0;
+	void DrawEllipse(double x, double y,
+		double wd, double ht) { DrawArc(x, y, wd, ht, 0, 360); }
+	///
+	void FillEllipse(double x, double y,
+		double wd, double ht) { FillSegment(x, y, wd, ht, 0, 360); }
 
 // Drawing Arcs
 	/// Draw an arc. (x,y) = top left of the corresponding ellipse,
diff -urNad /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/psgrafport.c tcm-2.20/src/ui/psgrafport.c
--- /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/psgrafport.c	2002-05-28 05:33:10.000000000 -0300
+++ tcm-2.20/src/ui/psgrafport.c	2003-05-19 18:43:19.000000000 -0300
@@ -585,13 +585,6 @@
 	DrawLine(x, y, x, y);
 }
 
-void PSGrafport::DrawEllipse(double x, double y, double wd, double ht) {
-	DrawArc(x, y, wd, ht, 0, 360);
-}
-
-void PSGrafport::FillEllipse(double x, double y, double wd, double ht) {
-	FillSegment(x, y, wd, ht, 0, 360);
-}
 
 /* virtual */ void PSGrafport::DrawSimpleArc(double x, double y,
 	double wd, double ht, int arc1, int arc2)
diff -urNad /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/psgrafport.h tcm-2.20/src/ui/psgrafport.h
--- /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/psgrafport.h	2002-05-28 05:33:10.000000000 -0300
+++ tcm-2.20/src/ui/psgrafport.h	2003-05-19 18:43:19.000000000 -0300
@@ -95,12 +95,6 @@
 	///
 	void DrawPoint(double x, double y);
 
-// Drawing Ellipses.
-	///
-	void DrawEllipse(double x, double y, double wd, double ht);
-	///
-	void FillEllipse(double x, double y, double wd, double ht);
-
 // Drawing Arcs.
 	///								
 	/* virtual */ void FillSegment(double x, double y,	
diff -urNad /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/xgrafport.c tcm-2.20/src/ui/xgrafport.c
--- /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/xgrafport.c	2002-05-28 05:33:11.000000000 -0300
+++ tcm-2.20/src/ui/xgrafport.c	2003-05-19 18:43:19.000000000 -0300
@@ -837,230 +837,3 @@
 	XFillPolygon(display, rdPixmap, xorGC, points, 4, Convex, 
 		CoordModePrevious);
 }
-
-
-//void XGrafport::DrawRoundedRectangle(double x, double y,
-//	double wd, double ht, double rd)
-//{
-//	if (GetLineStyle() == LineStyle::SOLID)
-//		DrawXRoundedRectangle(xorGC, x, y, wd, ht, rd);
-//	else if (GetLineStyle() == LineStyle::DASHED)
-//		DrawXRoundedRectangle(dashGC, x, y, wd, ht, rd);
-//	else if (GetLineStyle() == LineStyle::DOTTED)
-//		DrawXRoundedRectangle(dotGC, x, y, wd, ht, rd);
-//	else if (GetLineStyle() == LineStyle::WIDE_DOTTED)
-//		DrawXRoundedRectangle(wideDotGC, x, y, wd, ht, rd);
-//	else if (GetLineStyle() == LineStyle::DUAL) {
-//		DrawXRoundedRectangle(xorGC, x, y, wd, ht, rd);
-//		int n = 2*GetLineWidth();
-//		if (ht > 2*n && wd > 2*n)  
-//			DrawXRoundedRectangle(xorGC, x+n, y+n, wd-2*n, ht-2*n, rd);
-//	}
-//}
-//
-//void XGrafport::FillRoundedRectangle(double x, double y,
-//	double wd, double ht, double rd)
-//{
-//	FillXRoundedRectangle(xorGC, x, y, wd, ht, rd);
-//}
-//
-//void XGrafport::DrawEllipsedRectangle(double x, double y,
-//	double wd, double ht, double rd)
-//{
-//        if (GetLineStyle() == LineStyle::SOLID)
-//                DrawXEllipsedRectangle(xorGC, x, y, wd, ht, rd);
-//        else if (GetLineStyle() == LineStyle::DASHED)
-//                DrawXEllipsedRectangle(dashGC, x, y, wd, ht, rd);
-//        else if (GetLineStyle() == LineStyle::DOTTED)
-//                DrawXEllipsedRectangle(dotGC, x, y, wd, ht, rd);
-//        else if (GetLineStyle() == LineStyle::WIDE_DOTTED)
-//                DrawXEllipsedRectangle(wideDotGC, x, y, wd, ht, rd);
-//        else if (GetLineStyle() == LineStyle::DUAL) {
-//                DrawXEllipsedRectangle(xorGC, x, y, wd, ht, rd);
-//                int n = 2*GetLineWidth();
-//		if (ht > 2*n && wd > 2*n)  
-//                	DrawXEllipsedRectangle(xorGC, x+n, y+n, wd-2*n, ht-2*n, rd-n);
-//        }
-//}
-//
-//void XGrafport::DrawDisk(double x, double y,
-//	double wd, double ht, double el)
-//{
-//        if (GetLineStyle() == LineStyle::SOLID)
-//                DrawXDisk(xorGC, x, y, wd, ht, el);
-//        else if (GetLineStyle() == LineStyle::DASHED)
-//                DrawXDisk(dashGC, x, y, wd, ht, el);
-//        else if (GetLineStyle() == LineStyle::DOTTED)
-//                DrawXDisk(dotGC, x, y, wd, ht, el);
-//        else if (GetLineStyle() == LineStyle::WIDE_DOTTED)
-//                DrawXDisk(wideDotGC, x, y, wd, ht, el);
-//        else if (GetLineStyle() == LineStyle::DUAL) {
-//                DrawXDisk(xorGC, x, y, wd, ht, el);
-//                int n = 2*GetLineWidth();
-//		if (ht > 2*n && wd > 2*n)  
-//                	DrawXDisk(xorGC, x+n, y+n, wd-2*n, ht-2*n, el-2*n);
-//        }
-//}
-// 
-//void XGrafport::FillEllipsedRectangle(double x, double y,
-//	double wd, double ht, double rd)
-//{
-//        FillXEllipsedRectangle(xorGC, x, y, wd, ht, rd);
-//}
-//
-//void XGrafport::FillDisk(double x, double y,
-//	double wd, double ht, double el)
-//{
-//        FillXDisk(xorGC, x, y, wd, ht, el);
-//}
-//
-//void XGrafport::DrawXRoundedRectangle(GC gc, double x_, double y_,
-//	double wd_, double ht_, double rd_)
-//{
-//	int x = round(Zoom(x_)); int y = round(Zoom(y_));
-//	int wd = round(Zoom(wd_)); int ht = round(Zoom(ht_)); int rd = round(Zoom(rd_));
-//	// draw four lines (widthout the corner parts).
-//	XDrawLine(display, window, gc, x, y+rd+1, x, y+ht-rd-1);
-//	XDrawLine(display, window, gc, x+rd+1, y+ht, x+wd-rd-1, y+ht);
-//	XDrawLine(display, window, gc, x+wd, y+ht-rd-1, x+wd, y+rd+1);
-//	XDrawLine(display, window, gc, x+wd-rd-1, y, x+rd+1, y);
-//	XDrawLine(display, rdPixmap, gc, x, y+rd+1, x, y+ht-rd-1);
-//	XDrawLine(display, rdPixmap, gc, x+rd+1, y+ht, x+wd-rd-1, y+ht);
-//	XDrawLine(display, rdPixmap, gc, x+wd, y+ht-rd-1, x+wd, y+rd+1);
-//	XDrawLine(display, rdPixmap, gc, x+wd-rd-1, y, x+rd+1, y);
-//	// draw four corner arcs.
-//	int diam = 2*rd;
-//	XDrawArc(display, window, gc, x, y, diam, diam, 90*64, 90*64);
-//	XDrawArc(display, window, gc, x, y+ht-diam, diam, diam, 180*64, 90*64);
-//	XDrawArc(display, window, gc, x+wd-diam, y+ht-diam, diam, diam, 
-//			270*64, 90*64);
-//	XDrawArc(display, window, gc, x+wd-diam, y, diam, diam, 0*64, 90*64);
-//	XDrawArc(display, rdPixmap, gc, x, y, diam, diam, 90*64, 90*64);
-//	XDrawArc(display, rdPixmap, gc, x, y+ht-diam, diam, diam, 
-//			180*64, 90*64);
-//	XDrawArc(display, rdPixmap, gc, x+wd-diam, y+ht-diam, diam, diam, 
-//			270*64, 90*64);
-//	XDrawArc(display, rdPixmap, gc, x+wd-diam, y, diam, diam, 0*64, 90*64);
-//}
-//
-//void XGrafport::FillXRoundedRectangle(GC gc, double x_, double y_,
-//	double wd_, double ht_, double rd_)
-//{
-//	int x = round(Zoom(x_)); int y = round(Zoom(y_));
-//	int wd = round(Zoom(wd_)); int ht = round(Zoom(ht_)); int rd = round(Zoom(rd_));
-//	// fill rectangle parts.
-//	XFillRectangle(display, window, gc, x, y+rd, wd, ht-2*rd);
-//	XFillRectangle(display, window, gc, x+rd, y, wd-2*rd, rd);
-//	XFillRectangle(display, window, gc, x+rd, y+ht-rd, wd-2*rd, rd);
-//	XFillRectangle(display, rdPixmap, gc, x, y+rd, wd, ht-2*rd);
-//	XFillRectangle(display, rdPixmap, gc, x+rd, y, wd-2*rd, rd);
-//	XFillRectangle(display, rdPixmap, gc, x+rd, y+ht-rd, wd-2*rd, rd);
-//	// fill four corner arcs.
-//	int diam = 2*rd;
-//	XFillArc(display, window, gc, x, y, diam, diam, 90*64, 90*64);
-//	XFillArc(display, window, gc, x, y+ht-diam, diam, diam, 180*64, 90*64);
-//	XFillArc(display, window, gc, x+wd-diam, y+ht-diam, diam, diam, 
-//			270*64, 90*64);
-//	XFillArc(display, window, gc, x+wd-diam, y, diam, diam, 0*64, 90*64);
-//	XFillArc(display, rdPixmap, gc, x, y, diam, diam, 90*64, 90*64);
-//	XFillArc(display, rdPixmap, gc, x, y+ht-diam, diam, diam, 
-//			180*64, 90*64);
-//	XFillArc(display, rdPixmap, gc, x+wd-diam, y+ht-diam, diam, diam, 
-//			270*64, 90*64);
-//	XFillArc(display, rdPixmap, gc, x+wd-diam, y, diam, diam, 
-//			0*64, 90*64);
-//}
-//
-//void XGrafport::DrawXEllipsedRectangle(GC gc, double x_, double y_,
-//	double wd_, double ht_, double rd_)
-//{
-//        int x = round(Zoom(x_)); int y = round(Zoom(y_));
-//        int wd = round(Zoom(wd_)); int ht = round(Zoom(ht_)); int rd = round(Zoom(rd_));
-//        // draw two lines (without the corner parts).
-//        XDrawLine(display, window, gc, x+rd+1, y, x+wd-rd-1, y);
-//        XDrawLine(display, window, gc, x+rd+1, y+ht, x+wd-rd-1, y+ht);
-//        XDrawLine(display, rdPixmap, gc, x+rd+1, y, x+wd-rd-1, y);
-//        XDrawLine(display, rdPixmap, gc, x+rd+1, y+ht, x+wd-rd-1, y+ht);
-//        // draw two half circle parts.
-//        int diam = 2*rd;        // (== ht)
-//        XDrawArc(display, window, gc, x, y, diam, ht, 
-//		90*64, 180*64);
-//        XDrawArc(display, window, gc, x+wd-diam, y, diam, ht, 
-//		270*64, 180*64);
-//        XDrawArc(display, rdPixmap, gc, x, y, diam, ht, 
-//		90*64, 180*64);
-//        XDrawArc(display, rdPixmap, gc, x+wd-diam, y, diam, ht, 
-//		270*64, 180*64);
-//}
-// 
-//void XGrafport::FillXEllipsedRectangle(GC gc, double x_, double y_,
-//	double wd_, double ht_, double rd_)
-//{
-//        int x = round(Zoom(x_)); int y = round(Zoom(y_));
-//        int wd = round(Zoom(wd_)); int ht = round(Zoom(ht_)); int rd = round(Zoom(rd_));
-//        // fill rectangle part.
-//        XFillRectangle(display, window, gc, x+rd, y, wd-2*rd, ht);
-//        XFillRectangle(display, rdPixmap, gc, x+rd, y, wd-2*rd, ht);
-//        // fill two half circle parts.
-//        int diam = 2*rd;        // (== ht)
-//        XFillArc(display, window, gc, x, y, diam, ht, 
-//		 90*64, 180*64);
-//        XFillArc(display, window, gc, x+wd-diam, y, diam, ht, 
-//		 270*64, 180*64);
-//        XFillArc(display, rdPixmap, gc, x, y, diam, ht, 
-//		 90*64, 180*64);
-//        XFillArc(display, rdPixmap, gc, x+wd-diam, y, diam, ht, 
-//		270*64, 180*64);
-//}
-//
-//void XGrafport::DrawXDisk(GC gc, double x_, double y_, 
-//	double wd_, double ht_, double el_)
-//{
-//        int x = round(Zoom(x_)); int y = round(Zoom(y_));
-//        int wd = round(Zoom(wd_)); int ht = round(Zoom(ht_)); int el = round(Zoom(el_));
-//	int ah = el/2; // arc height
-//        // draw two lines (without the corner points).
-//        XDrawLine(display, window, gc, x, y+ah+1, x, y+ht-ah-1);
-//        XDrawLine(display, window, gc, x+wd, y+ah+1, x+wd, y+ht-ah-1);
-//        XDrawLine(display, rdPixmap, gc, x, y+ah+1, x, y+ht-ah-1);
-//        XDrawLine(display, rdPixmap, gc, x+wd, y+ah+1, x+wd, y+ht-ah-1);
-//        // draw whole ellipse (arc) and half ellipse
-//        XDrawArc(display, window, gc, x, y, wd, el, 0*64, 360*64);
-//        XDrawArc(display, window, gc, x, y+ht-el, wd, el, 0*64, -180*64);
-//        XDrawArc(display, rdPixmap, gc, x, y, wd, el, 0*64, 360*64);
-//        XDrawArc(display, rdPixmap, gc, x, y+ht-el, wd, el, 0*64, -180*64);
-//}
-// 
-//void XGrafport::FillXDisk(GC gc, double x_, double y_, 
-//	double wd_, double ht_, double el_)
-//{
-//        int x = round(Zoom(x_)); int y = round(Zoom(y_));
-//        int wd = round(Zoom(wd_)); int ht = round(Zoom(ht_)); int el = round(Zoom(el_));
-//	int ah = el/2; // arc height
-//	XFillRectangle(display, window, gc, x, y+ah+1, wd, ht-2*ah-1); 
-//	XFillRectangle(display, rdPixmap, gc, x, y+ah+1, wd, ht-2*ah-1); 
-//	// fill ellipse parts
-//        XFillArc(display, window, gc, x, y, wd, el, 0*64, 180*64);
-//        XFillArc(display, window, gc, x, y+ht-el, wd, el, 0*64, -180*64);
-//        XFillArc(display, rdPixmap, gc, x, y, wd, el, 0*64, 180*64);
-//        XFillArc(display, rdPixmap, gc, x, y+ht-el, wd, el, 0*64, -180*64);
-//}
-
-void XGrafport::DrawEllipse(double x, double y,
-	double wd, double ht)
-{
-	DrawArc(x, y, wd, ht, 0, 360);
-}
-
-void XGrafport::FillEllipse(double x, double y,
-	double wd, double ht)
-{
-	FillSegment(x, y, wd, ht, 0, 360);
-}
-
-//void XGrafport::FillArc(double x, double y,
-//	double wd, double ht, int arc1, int arc2)
-//{
-//	XSetArcMode(display, xorGC, ArcPieSlice);
-//	FillXArc(xorGC, x, y, wd, ht, arc1, arc2);
-//}
diff -urNad /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/xgrafport.h tcm-2.20/src/ui/xgrafport.h
--- /home/otavio/devel/debian/tcm/tcm-2.20/src/ui/xgrafport.h	2002-05-28 05:33:11.000000000 -0300
+++ tcm-2.20/src/ui/xgrafport.h	2003-05-19 18:43:19.000000000 -0300
@@ -126,12 +126,6 @@
 	///
 	void DrawPoint(double x, double y);
 
-// Drawing Ellipses
-	///
-	void DrawEllipse(double x, double y, double wd, double ht);
-	///
-	void FillEllipse(double x, double y, double wd, double ht);
-
 // Drawing Arcs
 	///
 	/* virtual */ void FillSegment(double x, double y,	
