diff -Nur tcm-2.20+TSQD.orig/src/sd/tr/trwindow.c tcm-2.20+TSQD/src/sd/tr/trwindow.c
--- tcm-2.20.orig/src/sd/tr/trwindow.c	2004-07-21 19:55:43.000000000 +0200
+++ tcm-2.20/src/sd/tr/trwindow.c	2006-04-02 15:13:09.000000000 +0200
@@ -72,7 +72,7 @@
 	// make the duplicate item insensitive.
 	Widget w1 = editMenu->GetMenuItem("Duplicate");
 	if (w1)
-		XtVaSetValues(w1, XmNsensitive, False, 0);
+		XtVaSetValues(w1, XmNsensitive, False, NULL);
 	return bar;
 }
 
@@ -89,14 +89,14 @@
 	// create a frame
 	Widget frame = XtVaCreateManagedWidget("layout_tiles_frame1",
 		xmFrameWidgetClass, parent,
-		XmNshadowType, XmSHADOW_ETCHED_IN, 0);
+		XmNshadowType, XmSHADOW_ETCHED_IN, NULL);
 	// create the label
 	XtVaCreateManagedWidget("Layout",
                         xmLabelWidgetClass, frame,
-                        XmNchildType, XmFRAME_TITLE_CHILD, 0);
+                        XmNchildType, XmFRAME_TITLE_CHILD, NULL);
 	// create a rowcolumn
 	Widget rc = XtVaCreateWidget("rc1", xmRowColumnWidgetClass, frame,
-		XmNentryAlignment, XmALIGNMENT_CENTER, 0);
+		XmNentryAlignment, XmALIGNMENT_CENTER, NULL);
 	// create a radiobox for the tiles
 	XtSetArg(args[i], XmNradioAlwaysOne, True); i++;
 	char wname[8] = "Layout";
@@ -112,7 +112,7 @@
 			XmNlabelType, XmSTRING,
 			XmNlabelString, lb1,
 			XmNuserData, (XtPointer)0,
-			XmNalignment, XmALIGNMENT_CENTER, 0);
+			XmNalignment, XmALIGNMENT_CENTER, NULL);
 	XtAddCallback(editButton, XmNvalueChangedCallback,
 			TRWindow::LayoutCB, (XtPointer)this);
 	AddLiteClue(editButton, "Edit mode in which document is drawn as a graph");
@@ -123,7 +123,7 @@
 			XmNlabelType, XmSTRING,
 			XmNhighlightThickness, 0,
 			XmNuserData, (XtPointer)1,
-			XmNalignment, XmALIGNMENT_CENTER, 0);
+			XmNalignment, XmALIGNMENT_CENTER, NULL);
 	XtAddCallback(treeButton, XmNvalueChangedCallback,
 			TRWindow::LayoutCB, (XtPointer)this);
 	AddLiteClue(treeButton, "View mode in which document has a forked tree layout");
@@ -179,13 +179,13 @@
 void TRWindow::SetSensitive(Menu *menu, const char *label, bool b) {
 	Widget w = menu->GetMenuItem(label);
 	if (w)
-		XtVaSetValues(w, XmNsensitive, b, 0);
+		XtVaSetValues(w, XmNsensitive, b, NULL);
 }
 
 void TRWindow::LayoutCB(Widget w, XtPointer cd, XtPointer) {
 	if (XmToggleButtonGetState(w)) {
 		int num;
-		XtVaGetValues(w, XmNuserData, &num, 0);
+		XtVaGetValues(w, XmNuserData, &num, NULL);
 		((TRWindow *)cd)->SetLayout(num);
 	}
 }
diff -Nur tcm-2.20+TSQD.orig/src/tb/tablewindow.c tcm-2.20+TSQD/src/tb/tablewindow.c
--- tcm-2.20.orig/src/tb/tablewindow.c	2004-07-21 19:51:26.000000000 +0200
+++ tcm-2.20/src/tb/tablewindow.c	2006-04-02 15:13:09.000000000 +0200
@@ -169,11 +169,11 @@
 	SetScaleValue(CreateScaleValue(parent));
 	XtVaSetValues(GetStatusArea(), XmNleftAttachment, XmATTACH_WIDGET,
 		XmNleftOffset, 20,
-		XmNleftWidget, GetArrowButtons(), 0);
+		XmNleftWidget, GetArrowButtons(), NULL);
 	XtVaSetValues(GetScrolledWindow(), XmNleftAttachment, XmATTACH_FORM,
 		XmNleftOffset, 20,
 		XmNbottomAttachment, XmATTACH_WIDGET,
-		XmNbottomWidget, GetArrowButtons(), 0);
+		XmNbottomWidget, GetArrowButtons(), NULL);
 }
 
 Widget TableWindow::CreateMenuBar(Widget parent) {
@@ -206,7 +206,7 @@
 				 documentItems);
 	helpMenu = new Menu(bar, Menu::PULLDOWN, "Help", 0, helpItems);
 	// tell bar which bar which button is the help menu
-	XtVaSetValues(bar, XmNmenuHelpWidget, helpMenu->GetWidget(), 0);
+	XtVaSetValues(bar, XmNmenuHelpWidget, helpMenu->GetWidget(), NULL);
 	// Bar is done -- manage it
 	XtManageChild(bar);
 	return bar;
diff -Nur tcm-2.20+TSQD.orig/src/ui/application.c tcm-2.20+TSQD/src/ui/application.c
--- tcm-2.20.orig/src/ui/application.c	2004-07-21 19:48:37.000000000 +0200
+++ tcm-2.20/src/ui/application.c	2006-04-02 15:13:09.000000000 +0200
@@ -109,7 +109,7 @@
 				(char **)XResources::classicColorResources :
 		 		(char **)XResources::modernColorResources) :
 		 		(char **)XResources::monoResources,
-		    XmNmappedWhenManaged, False, 0));
+		    XmNmappedWhenManaged, False, NULL));
 	// The Application class is less likely to need to handle
 	// "surprise" widget destruction than other classes, but
 	// we might as well install a callback to be safe and consistent
@@ -132,7 +132,7 @@
 	LoadColorFile();
 
 	// lesstif cannot accept a window of 0 width and height.
-	XtVaSetValues(GetWidget(), XmNwidth, 10, XmNheight, 10, 0);
+	XtVaSetValues(GetWidget(), XmNwidth, 10, XmNheight, 10, NULL);
 
 	// Force the shell window to exist so dialogs popped up from
 	// this shell behave correctly
@@ -179,7 +179,7 @@
 	if (!privateCmap) {
 		Colormap cmap = DefaultColormapOfScreen(XtScreen(GetWidget()));
 		cmap = XCopyColormapAndFree(display, cmap);
-		XtVaSetValues(GetWidget(), XmNcolormap, cmap, 0);
+		XtVaSetValues(GetWidget(), XmNcolormap, cmap, NULL);
 	}
 	privateCmap = True;
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/bitmap.c tcm-2.20+TSQD/src/ui/bitmap.c
--- tcm-2.20.orig/src/ui/bitmap.c	2004-07-21 19:48:36.000000000 +0200
+++ tcm-2.20/src/ui/bitmap.c	2006-04-02 15:13:09.000000000 +0200
@@ -37,7 +37,7 @@
 
 Pixmap Bitmap::CreatePixmap(Widget w, Display *display) const {
 	Pixel fg, bg;
-	XtVaGetValues(w, XmNforeground, &fg, XmNbackground, &bg, 0);
+	XtVaGetValues(w, XmNforeground, &fg, XmNbackground, &bg, NULL);
 	Screen *screen = XtScreen(w);
 	return XCreatePixmapFromBitmapData(display,
 			RootWindowOfScreen(screen),
diff -Nur tcm-2.20+TSQD.orig/src/ui/colorchooserdialog.c tcm-2.20+TSQD/src/ui/colorchooserdialog.c
--- tcm-2.20.orig/src/ui/colorchooserdialog.c	2004-07-21 19:48:29.000000000 +0200
+++ tcm-2.20/src/ui/colorchooserdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -60,19 +60,19 @@
 	XtAddCallback(GetList(), XmNbrowseSelectionCallback, 
 		      UpdateColorCB, this);
 	Widget rc = XtVaCreateManagedWidget("rc", 
-		xmRowColumnWidgetClass, GetWidget(), 0);
+		xmRowColumnWidgetClass, GetWidget(), NULL);
 	fillToggle = XtVaCreateManagedWidget("fill them",
                 xmToggleButtonWidgetClass, rc,
-                XmNset, True, 0);
+                XmNset, True, NULL);
 	Widget rc2 = XtVaCreateManagedWidget("rc2",
                 xmRowColumnWidgetClass, rc,
-                XmNorientation, XmHORIZONTAL, 0);
-	XtVaCreateManagedWidget("preview: ", xmLabelWidgetClass, rc2, 0);
+                XmNorientation, XmHORIZONTAL, NULL);
+	XtVaCreateManagedWidget("preview: ", xmLabelWidgetClass, rc2, NULL);
 	colorLabel = XtVaCreateManagedWidget(
 		"", xmTextFieldWidgetClass, rc2, 
 		XmNeditable, False, 
-		XmNcursorPositionVisible, False, 0);
-	XtVaGetValues(GetWidget(), XmNcolormap, &colormap, 0);
+		XmNcursorPositionVisible, False, NULL);
+	XtVaGetValues(GetWidget(), XmNcolormap, &colormap, NULL);
 }
 
 void ColorChooserDialog::UpdateColorCB(Widget, XtPointer p, XtPointer cbs) {
@@ -113,7 +113,7 @@
 				return;
 			}
                 }
-		XtVaSetValues(colorLabel, XmNbackground, pixel, 0);
+		XtVaSetValues(colorLabel, XmNbackground, pixel, NULL);
 	}
 }
 
@@ -145,7 +145,7 @@
         if (!check(fillToggle))
                 return;
         XmString text_string = CreateXmString(txt);
-        XtVaSetValues(fillToggle, XmNlabelString, text_string, 0);
+        XtVaSetValues(fillToggle, XmNlabelString, text_string, NULL);
         XmStringFree(text_string);
 }
 
diff -Nur tcm-2.20+TSQD.orig/src/ui/dialog.c tcm-2.20+TSQD/src/ui/dialog.c
--- tcm-2.20.orig/src/ui/dialog.c	2004-07-21 19:48:24.000000000 +0200
+++ tcm-2.20/src/ui/dialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -49,7 +49,7 @@
 	strncpy(t, title, MAXTITLE-1);
 	t[MAXTITLE-1] = '\0';
 	XmString s = CreateXmString(t);
-	XtVaSetValues(GetWidget(), XmNdialogTitle, s, 0);
+	XtVaSetValues(GetWidget(), XmNdialogTitle, s, NULL);
 	XmStringFree(s);
 }
 
@@ -61,7 +61,7 @@
 	if (!check(GetWidget()))
 		return;
 	XmString s = CreateXmString("");
-	XtVaGetValues(GetWidget(), XmNdialogTitle, &s, 0);
+	XtVaGetValues(GetWidget(), XmNdialogTitle, &s, NULL);
 	char *str;
 	if (XmStringGetLtoR(s, XmFONTLIST_DEFAULT_TAG, &str)) {
 		strncpy(title, str, MAXTITLE-1);
@@ -84,13 +84,13 @@
 	XtVaSetValues(GetWidget(), 
 		XmNdialogStyle, 
 		(b?XmDIALOG_FULL_APPLICATION_MODAL:XmDIALOG_MODELESS), 
-		0);
+		NULL);
 }
 
 void Dialog::SetAutoUnmanage(bool b) {
 	autoUnmanage = b;
 	if (GetWidget())
-		XtVaSetValues(GetWidget(), XmNautoUnmanage, b, 0);
+		XtVaSetValues(GetWidget(), XmNautoUnmanage, b, NULL);
 }
 
 void Dialog::SetOKCallback(XtCallbackProc fun, XtPointer clientData) {
@@ -127,7 +127,7 @@
 	if (!check(GetWidget()))
 		return;
 	XmString t = CreateXmString(txt);
-	XtVaSetValues(GetWidget(), XmNokLabelString, t, 0);
+	XtVaSetValues(GetWidget(), XmNokLabelString, t, NULL);
 	XmStringFree(t);
 }
 
@@ -135,7 +135,7 @@
 	if (!check(GetWidget()))
 		return;
 	XmString t = CreateXmString(txt);
-	XtVaSetValues(GetWidget(), XmNcancelLabelString, t, 0);
+	XtVaSetValues(GetWidget(), XmNcancelLabelString, t, NULL);
 	XmStringFree(t);
 }
 
@@ -143,7 +143,7 @@
 	if (!check(GetWidget()))
 		return;
 	XmString t = CreateXmString(txt);
-	XtVaSetValues(GetWidget(), XmNhelpLabelString, t, 0);
+	XtVaSetValues(GetWidget(), XmNhelpLabelString, t, NULL);
 	XmStringFree(t);
 }
 
@@ -214,7 +214,7 @@
 			&Dialog::DestroyWidgetCB, 0);
 		XtAddCallback(GetWidget(), XmNdestroyCallback,
 			&Dialog::DestroyCB, (XtPointer)this);
-		XtVaSetValues(GetWidget(), XmNdeleteResponse, XmDESTROY, 0);
+		XtVaSetValues(GetWidget(), XmNdeleteResponse, XmDESTROY, NULL);
 	}
 	else {
 		XtRemoveCallback(GetWidget(), XmNokCallback,
@@ -223,7 +223,7 @@
 			&Dialog::DestroyWidgetCB, 0);
 		XtRemoveCallback(GetWidget(), XmNdestroyCallback,
 			&Dialog::DestroyCB, (XtPointer)this);
-		XtVaSetValues(GetWidget(), XmNdeleteResponse, XmUNMAP, 0);
+		XtVaSetValues(GetWidget(), XmNdeleteResponse, XmUNMAP, NULL);
 	}
 }
 
@@ -269,8 +269,8 @@
 	// Temporarily set value of XmNmappedWhenManaged
 	//   to stop the dialog from popping up right away
 	bool mappedWhenManaged = False;
-	XtVaGetValues(shell, XmNmappedWhenManaged, &mappedWhenManaged, 0);
-	XtVaSetValues(shell, XmNmappedWhenManaged, False, 0);
+	XtVaGetValues(shell, XmNmappedWhenManaged, &mappedWhenManaged, NULL);
+	XtVaSetValues(shell, XmNmappedWhenManaged, False, NULL);
 	// Manage the dialog
 	XtManageChild(GetWidget());
 	// Get the pointer position (x, y)
@@ -300,9 +300,9 @@
 	if (y > maxY) 
 		y = maxY;
 	// Set desired window position in the DialogShell.
-	XtVaSetValues(shell, XmNx, x, XmNy, y, 0);
+	XtVaSetValues(shell, XmNx, x, XmNy, y, NULL);
 	// Map the widget
 	XtMapWidget(shell);
 	// Restore the value of XmNmappedWhenManaged
-	XtVaSetValues(shell, XmNmappedWhenManaged, mappedWhenManaged, 0);
+	XtVaSetValues(shell, XmNmappedWhenManaged, mappedWhenManaged, NULL);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/dumpwidgettree.c tcm-2.20+TSQD/src/ui/dumpwidgettree.c
--- tcm-2.20.orig/src/ui/dumpwidgettree.c	2004-07-21 19:48:33.000000000 +0200
+++ tcm-2.20/src/ui/dumpwidgettree.c	2006-04-02 15:13:09.000000000 +0200
@@ -51,7 +51,7 @@
 	}
 	XtVaGetValues(w,
 		XmNchildren, &list,
-		XmNnumChildren, &num_children, 0);
+		XmNnumChildren, &num_children, NULL);
 	printf("%s> %s has %d %s:\n", tmp,
 			XtName(w), num_children, 
 			num_children == 1 ? "child" : "children");
diff -Nur tcm-2.20+TSQD.orig/src/ui/fileselectiondialog.c tcm-2.20+TSQD/src/ui/fileselectiondialog.c
--- tcm-2.20.orig/src/ui/fileselectiondialog.c	2004-07-21 19:48:01.000000000 +0200
+++ tcm-2.20/src/ui/fileselectiondialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -71,7 +71,7 @@
 		XmNfileTypeMask, fileTypeMask,
 		XmNdirListLabelString, dirLabel,
 		XmNfileListLabelString, fileLabel,
-		XmNpattern, pattern, 0);
+		XmNpattern, pattern, NULL);
 	if (fileLabel)
 		XmStringFree(fileLabel);
 	if (dirLabel)
@@ -87,7 +87,7 @@
 	if (!check(GetWidget()))
 		return;
 	XmString dir = CreateXmString(d);
-	XtVaSetValues(GetWidget(), XmNdirectory, dir, 0);
+	XtVaSetValues(GetWidget(), XmNdirectory, dir, NULL);
 	XmStringFree(dir);
 }
 
@@ -102,8 +102,8 @@
 	// Update the file list in the dialog
 	XmString pattern = CreateXmString("");
 	XmString dir = CreateXmString("");
-	XtVaGetValues(GetWidget(), XmNpattern, &pattern, 0);
-	XtVaGetValues(GetWidget(), XmNdirectory, &dir, 0);
+	XtVaGetValues(GetWidget(), XmNpattern, &pattern, NULL);
+	XtVaGetValues(GetWidget(), XmNdirectory, &dir, NULL);
 	char *str1, *str2;
 	XmStringGetLtoR(dir, XmFONTLIST_DEFAULT_TAG, &str1);
 	XmStringGetLtoR(pattern, XmFONTLIST_DEFAULT_TAG, &str2);
@@ -129,7 +129,7 @@
 
 	// Force the default name in the text entry field.
 	dirSpec = CreateXmString(f);
-	XtVaSetValues(GetWidget(), XmNtextString, dirSpec, 0);
+	XtVaSetValues(GetWidget(), XmNtextString, dirSpec, NULL);
 	string f1 = f;
 	System::GiveFile(&f1, &defaultFile);
 	if (dirSpec)
@@ -145,9 +145,9 @@
 	DeselectAllItems();
 	// make sure file selection box has an acceptable minimal width.
 	short w;
-	XtVaGetValues(GetText(), XmNcolumns, &w, 0);
+	XtVaGetValues(GetText(), XmNcolumns, &w, NULL);
 	if (w < 40)
-		XtVaSetValues(GetText(), XmNcolumns, 40, 0);
+		XtVaSetValues(GetText(), XmNcolumns, 40, NULL);
 	Dialog::Popup();
 }
 
@@ -170,7 +170,7 @@
 		return;
 	XmString d = CreateXmString("");
 	char *str;
-	XtVaGetValues(GetWidget(), XmNdirectory, &d, 0);
+	XtVaGetValues(GetWidget(), XmNdirectory, &d, NULL);
 	if (XmStringGetLtoR(d, XmFONTLIST_DEFAULT_TAG, &str)) {
 		strcpy(dir, str);
 		XtFree(str);
@@ -201,14 +201,14 @@
 	char wname[MAXNAME] = "frame";
 	menuFrame = XmCreateFrame(GetWidget(), wname, args, i);
 	Widget rc = XtVaCreateWidget("rc", xmRowColumnWidgetClass, menuFrame, 
-			XmNorientation, XmHORIZONTAL, 0);
+			XmNorientation, XmHORIZONTAL, NULL);
 	XtVaCreateManagedWidget("label", xmLabelWidgetClass, 
-		rc, XmNlabelString, ls, 0);
+		rc, XmNlabelString, ls, NULL);
 	strcpy(wname, "menu");
 	menu = XmCreateOptionMenu(rc, wname, 0, 0);
 	strcpy(wname, "pane");
 	pane = XmCreatePulldownMenu(rc, wname, 0, 0);
-	XtVaSetValues(menu, XmNsubMenuId, pane, 0);
+	XtVaSetValues(menu, XmNsubMenuId, pane, NULL);
 	XtAddCallback(pane, XmNentryCallback, OptionChangedCB, this);
 	for (items->first(); !items->done(); items->next()) {
 		XtCreateManagedWidget(items->cur()->getstr(),
@@ -255,18 +255,18 @@
 	// only setting the label of option button does not work.
 	Widget *wlist;
 	int numc;
-	XtVaGetValues(pane, XmNchildren, &wlist, 0);
-	XtVaGetValues(pane, XmNnumChildren, &numc, 0);
+	XtVaGetValues(pane, XmNchildren, &wlist, NULL);
+	XtVaGetValues(pane, XmNnumChildren, &numc, NULL);
 	XmString s1 = CreateXmString(s->getstr());
 	for (int i=0; i<numc; i++) {
 		XmString s2 = CreateXmString("");
-		XtVaGetValues(wlist[i], XmNlabelString, &s2, 0);
+		XtVaGetValues(wlist[i], XmNlabelString, &s2, NULL);
 		char *str;
 		if (XmStringGetLtoR(s2, XmFONTLIST_DEFAULT_TAG, &str)) {
 			if (strstr(str, s->getstr())) {
-				XtVaSetValues(pane, XmNmenuHistory, wlist[i], 0);
+				XtVaSetValues(pane, XmNmenuHistory, wlist[i], NULL);
 				Widget l = XmOptionButtonGadget(menu);
-				XtVaSetValues(l, XmNlabelString, s1, 0);
+				XtVaSetValues(l, XmNlabelString, s1, NULL);
 				XmStringFree(s1);
 				XmStringFree(s2);
 				XtFree(str);
@@ -285,7 +285,7 @@
 		char *str;
 		XmString xs = CreateXmString("");
 		Widget l = XmOptionButtonGadget(menu);
-		XtVaGetValues(l, XmNlabelString, &xs, 0);
+		XtVaGetValues(l, XmNlabelString, &xs, NULL);
 		if (XmStringGetLtoR(xs, XmFONTLIST_DEFAULT_TAG, &str)) {
 			*item = str;
 			XtFree(str);
diff -Nur tcm-2.20+TSQD.orig/src/ui/finddialog.c tcm-2.20+TSQD/src/ui/finddialog.c
--- tcm-2.20.orig/src/ui/finddialog.c	2004-07-21 19:48:24.000000000 +0200
+++ tcm-2.20/src/ui/finddialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -60,30 +60,30 @@
 	ManageSelectionLabel(False);
 
 	form = XtVaCreateWidget("form",
-		xmFormWidgetClass, GetWidget(), 0);
+		xmFormWidgetClass, GetWidget(), NULL);
 	SetSelectionLabel(XtVaCreateManagedWidget("String to Find",
 		xmLabelWidgetClass, form, 
 		XmNleftAttachment, XmATTACH_FORM,
-		XmNtopAttachment, XmATTACH_FORM, 0));
+		XmNtopAttachment, XmATTACH_FORM, NULL));
 	SetText(XtVaCreateManagedWidget("find_text",
 		xmTextFieldWidgetClass, form,
 		XmNleftAttachment, XmATTACH_FORM,
 		XmNrightAttachment, XmATTACH_FORM,
 		XmNtopAttachment, XmATTACH_WIDGET,
-		XmNtopWidget, GetSelectionLabel(), 0));
+		XmNtopWidget, GetSelectionLabel(), NULL));
 	toggleRC = XtVaCreateManagedWidget("toggleRC",
 		xmRowColumnWidgetClass, form,
 		XmNorientation, XmHORIZONTAL, 
-		XmNleftAttachment, XmATTACH_FORM, 0);
+		XmNleftAttachment, XmATTACH_FORM, NULL);
 	sensitiveToggle = XtVaCreateManagedWidget("case sensitive", 
 		xmToggleButtonWidgetClass, toggleRC, 
-		XmNset, False, 0);
+		XmNset, False, NULL);
 	substringToggle = XtVaCreateWidget("substring", 
 		xmToggleButtonWidgetClass, toggleRC,
-		XmNset, True, 0);
+		XmNset, True, NULL);
 	nameOnlyToggle = XtVaCreateWidget("name only", 
 		xmToggleButtonWidgetClass, toggleRC,
-		XmNset, False, 0);
+		XmNset, False, NULL);
 	AttachToggles();
 	XtManageChild(form);
 }
@@ -91,7 +91,7 @@
 void FindDialog::AttachToggles() {
 	XtVaSetValues(toggleRC, 
 		XmNtopAttachment, XmATTACH_WIDGET,
-		XmNtopWidget, GetText(), 0);
+		XmNtopWidget, GetText(), NULL);
 }
 
 void FindDialog::ManageSensitiveToggle(bool b) {
diff -Nur tcm-2.20+TSQD.orig/src/ui/fontchooserdialog.c tcm-2.20+TSQD/src/ui/fontchooserdialog.c
--- tcm-2.20.orig/src/ui/fontchooserdialog.c	2004-07-21 19:48:43.000000000 +0200
+++ tcm-2.20/src/ui/fontchooserdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -105,7 +105,7 @@
 	SetHelpButtonLabel("Default");
 	// underlinedToggle = XtVaCreateManagedWidget("underlined",
           //       xmToggleButtonWidgetClass, GetWidget(),
-            //     XmNset, False, 0);
+            //     XmNset, False, NULL);
 	ChooseDefault();
 	SetToggleChangedCallback(0, ShowExampleCB, this);
 	SetToggleChangedCallback(1, ShowExampleCB, this);
@@ -137,7 +137,7 @@
 		XFontStruct *fs = exampleFont->GetXFontStruct();
 		XmFontList fl = XmFontListCreate(fs, 
 				XmSTRING_DEFAULT_CHARSET);
-		XtVaSetValues(GetText(), XmNfontList, fl, 0);
+		XtVaSetValues(GetText(), XmNfontList, fl, NULL);
 		XmFontListFree(fl);
 	}
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/lineenddialog.c tcm-2.20+TSQD/src/ui/lineenddialog.c
--- tcm-2.20.orig/src/ui/lineenddialog.c	2004-07-21 19:48:40.000000000 +0200
+++ tcm-2.20/src/ui/lineenddialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -163,9 +163,9 @@
 	List<Widget> *tl1 = (*GetToggleList())[0];
 	List<Widget> *tl2 = (*GetToggleList())[1];
 	XtVaSetValues(XtParent((*tl1)[0]), 
-		XmNnumColumns, 4, XmNorientation, XmHORIZONTAL, 0);
+		XmNnumColumns, 4, XmNorientation, XmHORIZONTAL, NULL);
 	XtVaSetValues(XtParent((*tl2)[0]), 
-		XmNnumColumns, 4, XmNorientation, XmHORIZONTAL, 0);
+		XmNnumColumns, 4, XmNorientation, XmHORIZONTAL, NULL);
 	for (int k=1; k<=LineEnd::NUMTYPES; k++) {
 		LineEnd::Type t = (LineEnd::Type)k;
 		string s1;
diff -Nur tcm-2.20+TSQD.orig/src/ui/linestyledialog.c tcm-2.20+TSQD/src/ui/linestyledialog.c
--- tcm-2.20.orig/src/ui/linestyledialog.c	2004-07-21 19:48:23.000000000 +0200
+++ tcm-2.20/src/ui/linestyledialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -94,5 +94,5 @@
 	List<Widget> *tl = (*GetToggleList())[0];
 	Widget rc = XtParent((*tl)[0]);
 	XtVaSetValues(rc, XmNnumColumns, 3, 
-			  XmNorientation, XmHORIZONTAL, 0);
+			  XmNorientation, XmHORIZONTAL, NULL);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/linestylesidedialog.c tcm-2.20+TSQD/src/ui/linestylesidedialog.c
--- tcm-2.20.orig/src/ui/linestylesidedialog.c	2004-07-21 19:48:48.000000000 +0200
+++ tcm-2.20/src/ui/linestylesidedialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -82,5 +82,5 @@
 	Widget rc = XtParent((*tl)[1]);
 	XtVaSetValues(rc, XmNnumColumns, 3, 
 			  XmNorientation, 
-			  XmHORIZONTAL, 0);
+			  XmHORIZONTAL, NULL);
 }
