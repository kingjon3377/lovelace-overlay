diff -Nur tcm-2.20+TSQD.orig/src/ui/linewidthdialog.c tcm-2.20+TSQD/src/ui/linewidthdialog.c
--- tcm-2.20.orig/src/ui/linewidthdialog.c	2004-07-21 19:48:04.000000000 +0200
+++ tcm-2.20/src/ui/linewidthdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -106,5 +106,5 @@
 	List<Widget> *tl = (*GetToggleList())[0];
 	Widget rc = XtParent((*tl)[0]);
 	XtVaSetValues(rc, XmNnumColumns, 3, 
-			  XmNorientation, XmHORIZONTAL, 0);
+			  XmNorientation, XmHORIZONTAL, NULL);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/linewidthsidedialog.c tcm-2.20+TSQD/src/ui/linewidthsidedialog.c
--- tcm-2.20.orig/src/ui/linewidthsidedialog.c	2004-07-21 19:48:08.000000000 +0200
+++ tcm-2.20/src/ui/linewidthsidedialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -82,5 +82,5 @@
 	Widget rc = XtParent((*tl)[1]);
 	XtVaSetValues(rc, XmNnumColumns, 3, 
 			  XmNorientation, 
-			  XmHORIZONTAL, 0);
+			  XmHORIZONTAL, NULL);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/mainwindow.c tcm-2.20+TSQD/src/ui/mainwindow.c
--- tcm-2.20.orig/src/ui/mainwindow.c	2004-07-21 19:48:10.000000000 +0200
+++ tcm-2.20/src/ui/mainwindow.c	2006-04-02 15:13:09.000000000 +0200
@@ -40,7 +40,7 @@
 	SetWidget(XtCreatePopupShell(GetName()->getstr(), 
 	 	topLevelShellWidgetClass, theApplication->GetWidget(), 0, 0));
 	XtVaSetValues(GetWidget(), XmNkeyboardFocusPolicy, XmPOINTER, 
-		XmNmappedWhenManaged, False, 0);
+		XmNmappedWhenManaged, False, NULL);
 	InstallDestroyHandler();
 	// Use a Motif XmMainWindow widget to handle window layout
 	main = XtCreateManagedWidget(GetName()->getstr(), xmMainWindowWidgetClass, 
@@ -50,7 +50,7 @@
 	config = c;
 	workarea = CreateWorkArea(main, argc, argv);  
 	if(check(workarea)) {
-		XtVaSetValues(main, XmNworkWindow, workarea, 0);
+		XtVaSetValues(main, XmNworkWindow, workarea, NULL);
 		if(!XtIsManaged(workarea))
 			XtManageChild(workarea);
 	}
@@ -82,7 +82,7 @@
 }
 
 void MainWindow::ManageUnmapped() {
-	XtVaSetValues(GetWidget(), XmNmappedWhenManaged, False, 0);
+	XtVaSetValues(GetWidget(), XmNmappedWhenManaged, False, NULL);
 	MWidget::Manage();
 }
 
@@ -91,7 +91,7 @@
 		return;
 	// Set the widget to have an initial iconic state
 	// in case the base widget has not yet been realized
-	XtVaSetValues(GetWidget(), XmNiconic, TRUE, 0);
+	XtVaSetValues(GetWidget(), XmNiconic, TRUE, NULL);
 	// If the widget has already been realized, iconify the window
 	if (XtIsRealized(GetWidget()))
 		XIconifyWindow(GetDisplay(), GetWindow(), 0);
@@ -103,7 +103,7 @@
 
 void MainWindow::SetTitle(const char *title) {
 	if (check(GetWidget()))
-		XtVaSetValues(GetWidget(), XmNtitle, title, 0);
+		XtVaSetValues(GetWidget(), XmNtitle, title, NULL);
 }
 
 void MainWindow::SetTitle(const string *title) {
@@ -112,13 +112,13 @@
 
 void MainWindow::SetIconName(const char *iconname) {
 	if (check(GetWidget()))
-		XtVaSetValues(GetWidget(), XmNiconName, iconname, 0);
+		XtVaSetValues(GetWidget(), XmNiconName, iconname, NULL);
 }
 
 void MainWindow::SetIconPixmap(Pixmap px) {
 	if (!check(GetWidget()))
 		return;
-	XtVaSetValues(GetWidget(), XmNiconPixmap, px, 0);
+	XtVaSetValues(GetWidget(), XmNiconPixmap, px, NULL);
 }
 
 PrinterOptions *MainWindow::GetPrinterOptions() {
diff -Nur tcm-2.20+TSQD.orig/src/ui/menu.c tcm-2.20+TSQD/src/ui/menu.c
--- tcm-2.20.orig/src/ui/menu.c	2006-04-02 15:12:45.000000000 +0200
+++ tcm-2.20/src/ui/menu.c	2006-04-02 15:14:26.000000000 +0200
@@ -43,13 +43,13 @@
 	Widget submenu;
 	WidgetList wlist; int numc;
 	if (type == PULLDOWN)
-		XtVaGetValues(w, XmNsubMenuId, &submenu, 0);
+		XtVaGetValues(w, XmNsubMenuId, &submenu, NULL);
 	else
 		submenu = w;
 	if (!check(submenu))
 		return 0;
-	XtVaGetValues(submenu, XmNchildren, &wlist, 0);
-	XtVaGetValues(submenu, XmNnumChildren, &numc, 0);
+	XtVaGetValues(submenu, XmNchildren, &wlist, NULL);
+	XtVaGetValues(submenu, XmNnumChildren, &numc, NULL);
 	if (n <= numc)
 		return wlist[n-1];
 	else
@@ -67,7 +67,7 @@
 		bool state) {
 	Widget child = GetNthChild(w, type, n);
 	if (check(child))
-		XtVaSetValues(child, XmNsensitive, state, 0);
+		XtVaSetValues(child, XmNsensitive, state, NULL);
 }
 
 Widget Menu::GetMenuItem(const char *label) {
@@ -78,17 +78,17 @@
 	Widget submenu;
 	WidgetList wlist; int numc;
 	if (menuType == PULLDOWN)
-		XtVaGetValues(w, XmNsubMenuId, &submenu, 0);
+		XtVaGetValues(w, XmNsubMenuId, &submenu, NULL);
 	else
 		submenu = w;
 	if (!check(submenu))
 		return 0;
-	XtVaGetValues(submenu, XmNchildren, &wlist, 0);
-	XtVaGetValues(submenu, XmNnumChildren, &numc, 0);
+	XtVaGetValues(submenu, XmNchildren, &wlist, NULL);
+	XtVaGetValues(submenu, XmNnumChildren, &numc, NULL);
 	XmString s2;
 	for (int i=0; i < numc; i++) {
 		s2 = CreateXmString("");
-		XtVaGetValues(wlist[i], XmNlabelString, &s2, 0); 
+		XtVaGetValues(wlist[i], XmNlabelString, &s2, NULL); 
 		char *str;
 		if (XmStringGetLtoR(s2, XmFONTLIST_DEFAULT_TAG, &str)) {
 			// std::cout << str << std::endl;
@@ -116,7 +116,7 @@
 		const char *label, bool state) {
 	Widget child = GetChild(w, type, label);
 	if (check(child))
-		XtVaSetValues(child, XmNsensitive, state, 0);
+		XtVaSetValues(child, XmNsensitive, state, NULL);
 }
 
 // Build popup, option and pulldown menus, depending on the menu type.
@@ -152,7 +152,7 @@
 			xmCascadeButtonWidgetClass, parent,
 			XmNsubMenuId, menu,
 			XmNlabelString, str,
-			XmNmnemonic, mnemonic, 0);
+			XmNmnemonic, mnemonic, NULL);
 		XmStringFree(str);
 	} else if (type == OPTION) {
 		// Option menus are a special case, but not hard to handle
@@ -199,7 +199,7 @@
 			else
 				wc = &xmPushButtonWidgetClass;
 			submenu = XtVaCreateManagedWidget(items[i].label,
-				*wc, menu, 0);
+				*wc, menu, NULL);
 		}
 		// toggle buttons are always visible as such
 		if (items[i].itemType == MenuItem::RADIOBUTTON || 
@@ -208,13 +208,13 @@
 			XtVaSetValues(submenu, XmNindicatorOn, True,
 				XmNvisibleWhenOff, True,
 				XmNindicatorSize, 12, 
-				0);
+				NULL);
 			// box or diamond ?
 			if (items[i].itemType == MenuItem::RADIOBUTTON) {
 				XtVaSetValues(menu, 
-					XmNradioBehavior, True, 0);
+					XmNradioBehavior, True, NULL);
 				XtVaSetValues(submenu, 
-					XmNindicatorType, XmONE_OF_MANY, 0);
+					XmNindicatorType, XmONE_OF_MANY, NULL);
 			}
 			// selected or not ?
 			if ((long)items[i].userData & 0x1)
@@ -223,22 +223,22 @@
 		}
 		if (items[i].userData)
 			XtVaSetValues(submenu, XmNuserData, 
-					items[i].userData, 0);
+					items[i].userData, NULL);
 
 		// Whether the item is a real item or a cascade button with a
 		// menu, it can still have a mnemonic.
 		//
 		if (items[i].mnemonic)
 			XtVaSetValues(submenu, XmNmnemonic, 
-				items[i].mnemonic, 0);
+				items[i].mnemonic, NULL);
 		// any item can have an accelerator, except cascade menus. But,
 		// we don't worry about that; we know better in our 
 		// declarations.
 		if (items[i].accelerator) {
 			str = CreateXmString(items[i].accelText);
-			XtVaSetValues(submenu, XmNacceleratorText, str, 0);
+			XtVaSetValues(submenu, XmNacceleratorText, str, NULL);
 			XtVaSetValues(submenu, XmNaccelerator, 
-					items[i].accelerator, 0);
+					items[i].accelerator, NULL);
 			XmStringFree(str);
 		}
 
@@ -252,7 +252,7 @@
 				items[i].callback, items[i].callbackData);
 
 		// set if item is selectable
-		XtVaSetValues(submenu, XmNsensitive, items[i].sensitive, 0);
+		XtVaSetValues(submenu, XmNsensitive, items[i].sensitive, NULL);
 
 		if (items[i].showBitmap) {
 			Bitmap b = items[i].bitmap;
@@ -261,7 +261,7 @@
 					XtDisplay(menu));
 			 	XtVaSetValues(submenu,
                           		XmNlabelType, XmPIXMAP,
-                          		XmNlabelPixmap, px, 0);
+                          		XmNlabelPixmap, px, NULL);
 			}
 		}
 	}
Binary files tcm-2.20+TSQD.orig/src/ui/.menu.c.rej.swp and tcm-2.20+TSQD/src/ui/.menu.c.rej.swp differ
diff -Nur tcm-2.20+TSQD.orig/src/ui/messagedialog.c tcm-2.20+TSQD/src/ui/messagedialog.c
--- tcm-2.20.orig/src/ui/messagedialog.c	2004-07-21 19:47:54.000000000 +0200
+++ tcm-2.20/src/ui/messagedialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -39,7 +39,7 @@
 
 void MessageDialog::SetMessageString(const char *s) {
 	XmString msg = CreateXmString(s);
-	XtVaSetValues(GetWidget(), XmNmessageString, msg, 0);
+	XtVaSetValues(GetWidget(), XmNmessageString, msg, NULL);
 	XmStringFree(msg);
 }
 
diff -Nur tcm-2.20+TSQD.orig/src/ui/messagelogdialog.c tcm-2.20+TSQD/src/ui/messagelogdialog.c
--- tcm-2.20.orig/src/ui/messagelogdialog.c	2004-07-21 19:47:57.000000000 +0200
+++ tcm-2.20/src/ui/messagelogdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -36,7 +36,7 @@
 		XmNscrollHorizontal, False,
 		XmNcolumns, 80,
 		XmNblinkRate, 0,
-		XmNautoShowCursorPosition, True, 0);
+		XmNautoShowCursorPosition, True, NULL);
 }
 
 void MessageLogDialog::InsertText(const string *txt) {
@@ -55,6 +55,6 @@
 	wprPosition += tmp.length();
 	XmTextInsert(GetTextWidget(), wprPosition, (char *)txt);
 	wprPosition += strlen(txt);
-	XtVaSetValues(GetTextWidget(), XmNcursorPosition, wprPosition, 0);
+	XtVaSetValues(GetTextWidget(), XmNcursorPosition, wprPosition, NULL);
 	XmTextShowPosition(GetTextWidget(), wprPosition);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/modelcheckdialog.c tcm-2.20+TSQD/src/ui/modelcheckdialog.c
--- tcm-2.20.orig/src/ui/modelcheckdialog.c	2004-07-21 19:48:30.000000000 +0200
+++ tcm-2.20/src/ui/modelcheckdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -45,38 +45,38 @@
 	ManageSelectionLabel(False);
 
 	form = XtVaCreateWidget("form",
-		xmFormWidgetClass, GetWidget(), 0);
+		xmFormWidgetClass, GetWidget(), NULL);
 	SetSelectionLabel(XtVaCreateManagedWidget("Kronos formula to be checked",
 		xmLabelWidgetClass, form,
 		XmNleftAttachment, XmATTACH_FORM,
-		XmNtopAttachment, XmATTACH_FORM, 0));
+		XmNtopAttachment, XmATTACH_FORM, NULL));
 	SetText(XtVaCreateManagedWidget("formula",
 		xmTextFieldWidgetClass, form,
 		XmNleftAttachment, XmATTACH_FORM,
 		XmNrightAttachment, XmATTACH_FORM,
 		XmNtopAttachment, XmATTACH_WIDGET,
-		XmNtopWidget, GetSelectionLabel(), 0));
+		XmNtopWidget, GetSelectionLabel(), NULL));
 	internLabel = XtVaCreateManagedWidget("Internal events",
 		xmLabelWidgetClass, GetForm(),
 		XmNleftAttachment, XmATTACH_FORM, 
 		XmNtopAttachment, XmATTACH_WIDGET, 
-		XmNtopWidget, GetText(), 0);
+		XmNtopWidget, GetText(), NULL);
 	internText = XtVaCreateManagedWidget("intern",
 		xmTextFieldWidgetClass, GetForm(), 
 		XmNleftAttachment, XmATTACH_FORM, 
 		XmNrightAttachment, XmATTACH_FORM, 
 		XmNtopAttachment, XmATTACH_WIDGET, 
-		XmNtopWidget, internLabel, 0);
+		XmNtopWidget, internLabel, NULL);
 	clockLabel = XtVaCreateManagedWidget("Clocks",
 		xmLabelWidgetClass, GetForm(),
 		XmNleftAttachment, XmATTACH_FORM, 
 		XmNtopAttachment, XmATTACH_WIDGET, 
-		XmNtopWidget, internText, 0);
+		XmNtopWidget, internText, NULL);
 	clockText = XtVaCreateManagedWidget("clock",
 		xmTextFieldWidgetClass, GetForm(), 
 		XmNleftAttachment, XmATTACH_FORM, 
 		XmNrightAttachment, XmATTACH_FORM, 
 		XmNtopAttachment, XmATTACH_WIDGET, 
-		XmNtopWidget, clockLabel, 0);
+		XmNtopWidget, clockLabel, NULL);
 	XtManageChild(form);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/mwidget.c tcm-2.20+TSQD/src/ui/mwidget.c
--- tcm-2.20.orig/src/ui/mwidget.c	2004-07-21 19:48:02.000000000 +0200
+++ tcm-2.20/src/ui/mwidget.c	2006-04-02 15:13:09.000000000 +0200
@@ -67,7 +67,7 @@
 		liteClue = XtVaCreatePopupShell("LiteClueShell",
                         xcgLiteClueWidgetClass, GetWidget(),
                         XgcNwaitPeriod, 700,
-                        XgcNcancelWaitPeriod, 1000, 0);
+                        XgcNcancelWaitPeriod, 1000, NULL);
 }
 
 bool MWidget::IsRealized() {
@@ -85,7 +85,7 @@
 }
 
 void MWidget::SetColormap(Colormap cmap) {
-	XtVaSetValues(GetWidget(), XmNcolormap, cmap, 0);
+	XtVaSetValues(GetWidget(), XmNcolormap, cmap, NULL);
 	XSetWindowColormap(GetDisplay(), XtWindow(GetWidget()), cmap);
 }
 
diff -Nur tcm-2.20+TSQD.orig/src/ui/nodealignmentdialog.c tcm-2.20+TSQD/src/ui/nodealignmentdialog.c
--- tcm-2.20.orig/src/ui/nodealignmentdialog.c	2004-07-21 19:48:18.000000000 +0200
+++ tcm-2.20/src/ui/nodealignmentdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -79,5 +79,5 @@
 	AddLiteClue((*tl)[4], "Align vertical");
 	AddLiteClue((*tl)[5], "Align right");
 	XtVaSetValues(rc, XmNnumColumns, 2, 
-			  XmNorientation, XmHORIZONTAL, 0);
+			  XmNorientation, XmHORIZONTAL, NULL);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/nodeshapedialog.c tcm-2.20+TSQD/src/ui/nodeshapedialog.c
--- tcm-2.20.orig/src/ui/nodeshapedialog.c	2004-07-21 19:48:24.000000000 +0200
+++ tcm-2.20/src/ui/nodeshapedialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -185,5 +185,5 @@
 	AddLiteClue((*tl)[24], "Disk");
 	AddLiteClue((*tl)[25], "Entity class");
 	XtVaSetValues(rc, XmNnumColumns, 3, 
-			  XmNorientation, XmVERTICAL, 0);
+			  XmNorientation, XmVERTICAL, NULL);
 }
diff -Nur tcm-2.20+TSQD.orig/src/ui/ntogglelistdialog.c tcm-2.20+TSQD/src/ui/ntogglelistdialog.c
--- tcm-2.20.orig/src/ui/ntogglelistdialog.c	2004-07-21 19:48:41.000000000 +0200
+++ tcm-2.20/src/ui/ntogglelistdialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -83,10 +83,10 @@
 	for (unsigned j=0; j<labels->count(); j++) {
 		Widget rc2 = XmCreateRowColumn(rc, wname, 0, 0);
 		Widget frame = XtVaCreateManagedWidget(wname,
-			xmFrameWidgetClass, rc2, 0);
+			xmFrameWidgetClass, rc2, NULL);
 		XtVaCreateManagedWidget((*labels)[j]->getstr(),
 			xmLabelWidgetClass, frame,
-			XmNchildType, XmFRAME_TITLE_CHILD, 0);
+			XmNchildType, XmFRAME_TITLE_CHILD, NULL);
 		Widget box = XmCreateRadioBox(frame, wname, 0, 0);
 		List<string *> *t = (*items)[j];
 		int i = 0;
@@ -98,7 +98,7 @@
 	 			xmToggleButtonWidgetClass, box,
 	 			XmNuserData, i,
 	 			XmNhighlightThickness, 0,
-	 			XmNset, i==0, 0);
+	 			XmNset, i==0, NULL);
 	 		toggles->add(w);
 		}
 		toggleList.add(toggles);
@@ -108,7 +108,7 @@
 			Widget w = XtVaCreateManagedWidget(s,
 	 			xmToggleButtonWidgetClass, rc2,
 	 			XmNhighlightThickness, 0,
-	 			XmNset, 0, 0);
+	 			XmNset, 0, NULL);
 			optionList.add(w);
 		}
 		XtManageChild(rc2);
@@ -124,7 +124,7 @@
                 	Pixmap pixmap = bitmap->CreatePixmap(tb, GetDisplay());
                 	XtVaSetValues(tb,
                         	XmNlabelType, XmPIXMAP,
-                        	XmNlabelPixmap, pixmap, 0);
+                        	XmNlabelPixmap, pixmap, NULL);
 		}
         }
 }
@@ -135,7 +135,7 @@
 		List<Widget> *toggles = toggleList[n];
  		if (check(i < toggles->count())) {
 			XmString s = CreateXmString(txt->getstr());
-			XtVaSetValues((*toggles)[i], XmNlabelString, s, 0);
+			XtVaSetValues((*toggles)[i], XmNlabelString, s, NULL);
 			XmStringFree(s);
 		}
 	}
@@ -146,7 +146,7 @@
 		List<Widget> *toggles = toggleList[n];
 		if (check(i < toggles->count())) {
 			XmString s = CreateXmString("");
-			XtVaGetValues((*toggles)[i], XmNlabelString, &s, 0);
+			XtVaGetValues((*toggles)[i], XmNlabelString, &s, NULL);
 			char *str;
 			if (XmStringGetLtoR(s, XmFONTLIST_DEFAULT_TAG, &str)) {
 				*txt = str;
@@ -170,7 +170,7 @@
 		List<Widget> *toggles = toggleList[n];
 		for (unsigned i=0; i<toggles->count(); i++) {
 			XmString s = CreateXmString("");
-			XtVaGetValues((*toggles)[i], XmNlabelString, &s, 0);
+			XtVaGetValues((*toggles)[i], XmNlabelString, &s, NULL);
 			char *str;
 			if (XmStringGetLtoR(s, XmFONTLIST_DEFAULT_TAG, &str)) {
 				if (*t == str) {
diff -Nur tcm-2.20+TSQD.orig/src/ui/replacedialog.c tcm-2.20+TSQD/src/ui/replacedialog.c
--- tcm-2.20.orig/src/ui/replacedialog.c	2004-07-21 19:48:17.000000000 +0200
+++ tcm-2.20/src/ui/replacedialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -37,24 +37,24 @@
 	SetOKButtonLabel("Find\nNext");
 	SetApplyButtonLabel("Replace\nAll");
 	replaceButton = XtVaCreateManagedWidget("Replace",
-		xmPushButtonWidgetClass, GetWidget(), 0);
+		xmPushButtonWidgetClass, GetWidget(), NULL);
 	XmString t = CreateXmString("Replace\nNext");
-	XtVaSetValues(replaceButton, XmNlabelString, t, 0);
+	XtVaSetValues(replaceButton, XmNlabelString, t, NULL);
 	SetHelpCallback(ReplaceClearCB, this);
 	replaceLabel = XtVaCreateManagedWidget("Replace with",
 		xmLabelWidgetClass, GetForm(),
 		XmNleftAttachment, XmATTACH_FORM, 
 		XmNtopAttachment, XmATTACH_WIDGET, 
-		XmNtopWidget, GetText(), 0);
+		XmNtopWidget, GetText(), NULL);
 	replaceText = XtVaCreateManagedWidget("replace_text",
 		xmTextFieldWidgetClass, GetForm(), 
 		XmNleftAttachment, XmATTACH_FORM, 
 		XmNrightAttachment, XmATTACH_FORM, 
 		XmNtopAttachment, XmATTACH_WIDGET, 
-		XmNtopWidget, replaceLabel, 0);
+		XmNtopWidget, replaceLabel, NULL);
 	XtVaSetValues(GetToggleRC(), 
 		XmNtopAttachment, XmATTACH_WIDGET, 
-		XmNtopWidget, replaceText, 0);
+		XmNtopWidget, replaceText, NULL);
 	XmStringFree(t);
 }
 
diff -Nur tcm-2.20+TSQD.orig/src/ui/scaledialog.c tcm-2.20+TSQD/src/ui/scaledialog.c
--- tcm-2.20.orig/src/ui/scaledialog.c	2004-07-21 19:48:16.000000000 +0200
+++ tcm-2.20/src/ui/scaledialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -37,7 +37,7 @@
 	scale = XtVaCreateManagedWidget("scale",
 			xmScaleWidgetClass, GetWidget(),
 			XmNorientation, XmHORIZONTAL,
-			XmNshowValue, True, 0);
+			XmNshowValue, True, NULL);
 }
 
 void ScaleDialog::Configure() {
@@ -54,7 +54,7 @@
 		XmNmaximum, max,
 		XmNminimum, min,
 		XmNvalue, init,
-		XmNdecimalPoints, decimal, 0);
+		XmNdecimalPoints, decimal, NULL);
 	initValue = init;
 	defaultValue = def;
 }
@@ -64,7 +64,7 @@
 		return;
 	XmString text_string = CreateXmString(text);
 	// XtVaTypedArg, XmNtitleString, XmRString, text, strlen(text),
-	XtVaSetValues(scale, XmNtitleString, text_string, 0);
+	XtVaSetValues(scale, XmNtitleString, text_string, NULL);
 	XmStringFree(text_string);
 }
 
diff -Nur tcm-2.20+TSQD.orig/src/ui/selectiondialog.c tcm-2.20+TSQD/src/ui/selectiondialog.c
--- tcm-2.20.orig/src/ui/selectiondialog.c	2004-07-21 19:48:45.000000000 +0200
+++ tcm-2.20/src/ui/selectiondialog.c	2006-04-02 15:13:09.000000000 +0200
@@ -76,7 +76,7 @@
 	if (!check(GetWidget()))
 		return;
 	XmString t = CreateXmString(v);
-	XtVaSetValues(GetWidget(), XmNselectionLabelString, t, 0);
+	XtVaSetValues(GetWidget(), XmNselectionLabelString, t, NULL);
 	XmStringFree(t);
 }
 
@@ -106,7 +106,7 @@
 	if (!check(GetWidget()))
 		return;
 	XmString t = CreateXmString(txt);
-	XtVaSetValues(GetWidget(), XmNapplyLabelString, t, 0);
+	XtVaSetValues(GetWidget(), XmNapplyLabelString, t, NULL);
 	XmStringFree(t);
 }
 
