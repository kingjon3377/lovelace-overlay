#! /bin/sh /usr/share/dpatch/dpatch-run
## 02-fix-ftbfs-and-hrdiagram-opts.dpatch by Kamal Mostafa <kamal@whence.com>
##
## DP: Fixes:
## DP:  - FTBFS - must call set_*_item() accessors, not set_item() template
## DP:  - Make HR Diagram window Options menu correctly reflect the state of
## DP:    the main window opts for Labels and Diameters on HR window startup.
##
## License: This patch is licensed under terms of GPL2, or (at your option)
## any later version.

@DPATCH@
=== modified file 'src/gui/hrdiagram.cc'
--- a/src/gui/hrdiagram.cc	2008-05-17 11:52:11 +0000
+++ b/src/gui/hrdiagram.cc	2010-01-07 18:17:30 +0000
@@ -29,7 +29,7 @@
 /* Functions to make sure the HR Diagram window stays updated */
 
 namespace globals {
-  static GtkWidget  *program_hr_window = NULL;
+  GtkWidget         *program_hr_window = NULL;
   static GdkPixmap  *program_hr_pixmap = NULL;
 }
 
@@ -88,6 +88,7 @@
   delete globals::program_hr_viewer;
   globals::program_hr_viewer = NULL;
   gtk_widget_destroy(globals::program_hr_window);
+  globals::program_hr_window = NULL;
   return;
 }
 
@@ -254,8 +255,7 @@
     hr_options_label_widgets[i] = item;
     
     if ((GTK_CHECK_MENU_ITEM (options_label_widgets[i]))->active)
-      set_item(&globals::chart_rules.StarLabels,
-	       globals::chart_rules.StarLabels, item, false);
+      set_label_item(globals::chart_rules.StarLabels, false);
   }
 
   for (unsigned int i = 0; i < OPTIONS_DIAMETER_MENU_SIZE; i++) {
@@ -265,8 +265,7 @@
     hr_options_diameter_widgets[i] = item;
 
     if ((GTK_CHECK_MENU_ITEM (options_diameter_widgets[i]))->active)
-      set_item(&globals::chart_rules.StarDiameters,
-	       globals::chart_rules.StarDiameters, item, false);
+      set_diameter_item(globals::chart_rules.StarDiameters, false);
   }
 
   if (menubar) {

=== modified file 'src/gui/menuops.cc'
--- a/src/gui/menuops.cc	2008-05-17 11:52:11 +0000
+++ b/src/gui/menuops.cc	2010-01-07 18:08:32 +0000
@@ -303,12 +303,12 @@
 
 void set_label_item(star_label_t l, bool redraw)
 {
-  if (globals::chart_rules.StarLabels == l) return;
-
-  if (globals::program_hr_viewer) {
+  if (globals::program_hr_window) {
     set_item(&globals::chart_rules.StarLabels, l,
 	     hr_options_label_widgets[l], false);
   }
+
+  if (globals::chart_rules.StarLabels == l) return;
   set_item(&globals::chart_rules.StarLabels, l,
 	   options_label_widgets[l], redraw);
 }
@@ -320,12 +320,12 @@
 
 void set_diameter_item(star_diameter_t d, bool redraw)
 {
-  if (globals::chart_rules.StarDiameters == d) return;
-
-  if (globals::program_hr_viewer) {
+  if (globals::program_hr_window) {
     set_item(&globals::chart_rules.StarDiameters, d,
 	     hr_options_diameter_widgets[d], false);
   }
+
+  if (globals::chart_rules.StarDiameters == d) return;
   set_item(&globals::chart_rules.StarDiameters, d,
 	   options_diameter_widgets[d], redraw);
 }

=== modified file 'src/gui/starplot.h'
--- a/src/gui/starplot.h	2008-05-17 11:52:11 +0000
+++ b/src/gui/starplot.h	2010-01-07 18:01:36 +0000
@@ -134,6 +134,7 @@
   extern GTKViewer    *program_viewer;      // The GTKViewer used by StarPlot
   extern GtkWidget    *program_canvas;      // The GTK_DRAWING_AREA used
   extern GdkPixmap    *program_pixmap;	    // The backing pixmap
+  extern GtkWidget    *program_hr_window;   // HR Diagram GTK_WINDOW
   extern GTKViewer    *program_hr_viewer;   // HR Diagram GTKViewer
   extern GtkWidget    *program_hr_canvas;   // HR Diagram GTK_DRAWING_AREA  
   extern GdkPixbuf    *program_icon;	    // used by the window manager

